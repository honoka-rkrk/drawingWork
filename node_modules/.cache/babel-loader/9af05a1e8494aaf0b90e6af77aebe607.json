{"ast":null,"code":"import React from'react';import Typography from'@material-ui/core/Typography';import CompInfDialog from'../../Component/Dialog/infDialog';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var InfDialog=function InfDialog(props){var infOpen=props.infOpen,title=props.title,msg=props.msg,clickOK=props.clickOK,txtOK=props.txtOK;var msgElm=function msgElm(_msg){var arrText=_msg.split('\\n');return/*#__PURE__*/_jsx(_Fragment,{children:arrText.map(function(item,index){return/*#__PURE__*/_jsx(Typography,{component:'span',children:item},\"msgElm_\".concat(index));})});};return/*#__PURE__*/_jsx(CompInfDialog,{infOpen:infOpen,title:title,msgElm:msgElm(msg),clickOK:clickOK,txtOK:txtOK});};export default InfDialog;","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Utils/Container/Dialog/infDialog.tsx"],"names":["React","Typography","CompInfDialog","InfDialog","props","infOpen","title","msg","clickOK","txtOK","msgElm","_msg","arrText","split","map","item","index"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CAEA,MAAOC,CAAAA,aAAP,KAA0B,kCAA1B,C,gGAUA,GAAMC,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,CAACC,KAAD,CAA2B,CACrE,GAAQC,CAAAA,OAAR,CAAgDD,KAAhD,CAAQC,OAAR,CAAiBC,KAAjB,CAAgDF,KAAhD,CAAiBE,KAAjB,CAAwBC,GAAxB,CAAgDH,KAAhD,CAAwBG,GAAxB,CAA6BC,OAA7B,CAAgDJ,KAAhD,CAA6BI,OAA7B,CAAsCC,KAAtC,CAAgDL,KAAhD,CAAsCK,KAAtC,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,IAAD,CAAkB,CAC/B,GAAMC,CAAAA,OAAO,CAAGD,IAAI,CAACE,KAAL,CAAW,IAAX,CAAhB,CACA,mBACE,yBACGD,OAAO,CAACE,GAAR,CAAY,SAACC,IAAD,CAAOC,KAAP,qBACX,KAAC,UAAD,EAAY,SAAS,CAAE,MAAvB,UACGD,IADH,mBAA8CC,KAA9C,EADW,EAAZ,CADH,EADF,CASD,CAXD,CAaA,mBACE,KAAC,aAAD,EACE,OAAO,CAAEX,OADX,CAEE,KAAK,CAAEC,KAFT,CAGE,MAAM,CAAEI,MAAM,CAACH,GAAD,CAHhB,CAIE,OAAO,CAAEC,OAJX,CAKE,KAAK,CAAEC,KALT,EADF,CASD,CAzBD,CA2BA,cAAeN,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport CompInfDialog from '../../Component/Dialog/infDialog';\n\ntype InfDialogProps = {\n  infOpen: boolean;\n  title: string;\n  msg: string;\n  clickOK: () => void;\n  txtOK?: string;\n};\n\nconst InfDialog: React.FC<InfDialogProps> = (props: InfDialogProps) => {\n  const { infOpen, title, msg, clickOK, txtOK } = props;\n\n  const msgElm = (_msg: string) => {\n    const arrText = _msg.split('\\n');\n    return (\n      <>\n        {arrText.map((item, index) => (\n          <Typography component={'span'} key={`msgElm_${index}`}>\n            {item}\n          </Typography>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <CompInfDialog\n      infOpen={infOpen}\n      title={title}\n      msgElm={msgElm(msg)}\n      clickOK={clickOK}\n      txtOK={txtOK}\n    />\n  );\n};\n\nexport default InfDialog;\n"]},"metadata":{},"sourceType":"module"}