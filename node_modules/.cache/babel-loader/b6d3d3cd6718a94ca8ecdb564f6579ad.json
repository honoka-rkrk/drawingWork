{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/Home/Container/Btn/entryBtn.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport firebase, { db } from '../../../firebase';\nimport { UserContext } from '../../../Context/contexts';\nimport CompEntryBtn from '../../Component/Btn/entryBtn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EntryBtn = props => {\n  _s();\n\n  const {\n    isMax,\n    setIsMax\n  } = props;\n  const [infOpen, setInfOpen] = useState(false);\n  const history = useHistory();\n  const {\n    user\n  } = useContext(UserContext);\n  const [disabled, setDisabled] = useState(true);\n  useEffect(() => {\n    if (user) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  }, [user]);\n\n  const doneEntry = async numbers => {\n    if (numbers === 20) {\n      await db.collection('entryMembers').doc('entryNumber').set({\n        numbers: firebase.firestore.FieldValue.increment(1),\n        maximum: true\n      });\n    } else {\n      await db.collection('entryMembers').doc('entryNumber').set({\n        numbers: firebase.firestore.FieldValue.increment(1),\n        maximum: false\n      }, {\n        merge: true\n      });\n    }\n  };\n\n  const getMember = async () => {\n    let unmounted = false;\n    const entoryMembersRef = db.collection('entryMembers').doc('entryNumber');\n    await entoryMembersRef.get().then(doc => {\n      if (doc.exists) {\n        const getData = doc.data();\n\n        if (!getData.maximum) {\n          doneEntry(getData.numbers);\n          history.push('/chat');\n        } else {\n          if (!unmounted) {\n            setInfOpen(true);\n            setIsMax(true);\n          }\n        }\n      } else {\n        doneEntry(0);\n        history.push('/chat');\n      }\n    }).catch(error => {\n      console.log('Error getting document', error);\n    });\n    return () => {\n      unmounted = true;\n    };\n  };\n\n  const entryClick = useCallback(() => {\n    getMember();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CompEntryBtn, {\n    infOpen: infOpen,\n    setInfOpen: setInfOpen,\n    entryClick: entryClick,\n    isMax: isMax,\n    disabled: disabled\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EntryBtn, \"FdJGCakqfMLpDvwl3W/QHLC30MI=\", false, function () {\n  return [useHistory];\n});\n\n_c = EntryBtn;\nexport default EntryBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryBtn\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Home/Container/Btn/entryBtn.tsx"],"names":["React","useState","useCallback","useContext","useEffect","useHistory","firebase","db","UserContext","CompEntryBtn","EntryBtn","props","isMax","setIsMax","infOpen","setInfOpen","history","user","disabled","setDisabled","doneEntry","numbers","collection","doc","set","firestore","FieldValue","increment","maximum","merge","getMember","unmounted","entoryMembersRef","get","then","exists","getData","data","push","catch","error","console","log","entryClick"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport firebase, { db } from '../../../firebase';\n\nimport { UserContext } from '../../../Context/contexts';\nimport CompEntryBtn from '../../Component/Btn/entryBtn';\n\ntype EntryBtnProps = {\n  isMax: boolean;\n  setIsMax: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst EntryBtn: React.FC<EntryBtnProps> = (props: EntryBtnProps) => {\n  const { isMax, setIsMax } = props;\n  const [infOpen, setInfOpen] = useState<boolean>(false);\n  const history = useHistory();\n  const { user } = useContext(UserContext);\n  const [disabled, setDisabled] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (user) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  }, [user]);\n\n  const doneEntry = async (numbers: number) => {\n    if (numbers === 20) {\n      await db\n        .collection('entryMembers')\n        .doc('entryNumber')\n        .set({\n          numbers: firebase.firestore.FieldValue.increment(1),\n          maximum: true\n        });\n    } else {\n      await db\n        .collection('entryMembers')\n        .doc('entryNumber')\n        .set(\n          {\n            numbers: firebase.firestore.FieldValue.increment(1),\n            maximum: false\n          },\n          { merge: true }\n        );\n    }\n  };\n\n  const getMember = async () => {\n    let unmounted = false;\n    const entoryMembersRef = db.collection('entryMembers').doc('entryNumber');\n    await entoryMembersRef\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          const getData: any = doc.data();\n          if (!getData.maximum) {\n            doneEntry(getData.numbers);\n            history.push('/chat');\n          } else {\n            if (!unmounted) {\n              setInfOpen(true);\n              setIsMax(true);\n            }\n          }\n        } else {\n          doneEntry(0);\n          history.push('/chat');\n        }\n      })\n      .catch((error) => {\n        console.log('Error getting document', error);\n      });\n\n    return () => {\n      unmounted = true;\n    };\n  };\n\n  const entryClick = useCallback(() => {\n    getMember();\n  }, []);\n\n  return (\n    <CompEntryBtn\n      infOpen={infOpen}\n      setInfOpen={setInfOpen}\n      entryClick={entryClick}\n      isMax={isMax}\n      disabled={disabled}\n    />\n  );\n};\n\nexport default EntryBtn;\n"]},"metadata":{},"sourceType":"module"}