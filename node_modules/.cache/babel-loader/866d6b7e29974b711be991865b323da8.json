{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/DispPicture/Container/timer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport CompTimer from '../Component/timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = () => {\n  _s();\n\n  const [end, setEnd] = useState(null);\n  const [tmMinutes, setTmMinutes] = useState('');\n  const [tmSeconds, setTmSeconds] = useState('');\n  const [danger, setDanger] = useState(false);\n  const [isEnd, setIsEnd] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const dtNow = moment().startOf('day'); // const endHour = dtNow.add(18, 'hours');\n    // const endTime = endHour.add(6, 'minutes');\n\n    const endTime = moment().add(30, 'seconds');\n    setEnd(endTime);\n  }, [setEnd]);\n  const updateTime = useCallback(async () => {\n    const dtNow = moment();\n\n    if (end) {\n      const timerDiff = end.diff(dtNow, 'second');\n      setTmMinutes(String(Math.floor(timerDiff / 60)));\n      setTmSeconds(String(timerDiff % 60));\n\n      if (timerDiff === 0) {\n        setIsEnd(true);\n      }\n\n      if (Math.floor(timerDiff / 60) < 1) {\n        setDanger(true);\n      }\n    }\n  }, [end]);\n  useEffect(() => {\n    if (!isEnd) {\n      const updateTimeId = setInterval(updateTime, 500);\n      updateTime();\n      return () => {\n        clearInterval(updateTimeId);\n      };\n    } else {\n      return;\n    }\n  }, [updateTime, isEnd]);\n  const clickOK = useCallback(() => {\n    history.push('/');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CompTimer, {\n    tmMinutes: tmMinutes,\n    tmSeconds: tmSeconds,\n    danger: danger,\n    isEnd: isEnd,\n    clickOK: clickOK\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"JPcSy4O2P0yDs6dfCAdSrR8Z31c=\", false, function () {\n  return [useHistory];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/DispPicture/Container/timer.tsx"],"names":["React","useState","useEffect","useCallback","moment","useHistory","CompTimer","Timer","end","setEnd","tmMinutes","setTmMinutes","tmSeconds","setTmSeconds","danger","setDanger","isEnd","setIsEnd","history","dtNow","startOf","endTime","add","updateTime","timerDiff","diff","String","Math","floor","updateTimeId","setInterval","clearInterval","clickOK","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAA+B,QAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;;;AAEA,MAAMC,KAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAgB,IAAhB,CAA9B;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAS,EAAT,CAA1C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAS,EAAT,CAA1C;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAU,KAAV,CAApC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAU,KAAV,CAAlC;AACA,QAAMiB,OAAO,GAAGb,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,KAAK,GAAGf,MAAM,GAAGgB,OAAT,CAAiB,KAAjB,CAAd,CADc,CAEd;AACA;;AACA,UAAMC,OAAO,GAAGjB,MAAM,GAAGkB,GAAT,CAAa,EAAb,EAAiB,SAAjB,CAAhB;AACAb,IAAAA,MAAM,CAACY,OAAD,CAAN;AACD,GANQ,EAMN,CAACZ,MAAD,CANM,CAAT;AAQA,QAAMc,UAAU,GAAGpB,WAAW,CAAC,YAAY;AACzC,UAAMgB,KAAK,GAAGf,MAAM,EAApB;;AACA,QAAII,GAAJ,EAAS;AACP,YAAMgB,SAAS,GAAGhB,GAAG,CAACiB,IAAJ,CAASN,KAAT,EAAgB,QAAhB,CAAlB;AACAR,MAAAA,YAAY,CAACe,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWJ,SAAS,GAAG,EAAvB,CAAD,CAAP,CAAZ;AACAX,MAAAA,YAAY,CAACa,MAAM,CAACF,SAAS,GAAG,EAAb,CAAP,CAAZ;;AACA,UAAIA,SAAS,KAAK,CAAlB,EAAqB;AACnBP,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACD,UAAIU,IAAI,CAACC,KAAL,CAAWJ,SAAS,GAAG,EAAvB,IAA6B,CAAjC,EAAoC;AAClCT,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF;AACF,GAb6B,EAa3B,CAACP,GAAD,CAb2B,CAA9B;AAeAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACc,KAAL,EAAY;AACV,YAAMa,YAAY,GAAGC,WAAW,CAACP,UAAD,EAAa,GAAb,CAAhC;AACAA,MAAAA,UAAU;AACV,aAAO,MAAM;AACXQ,QAAAA,aAAa,CAACF,YAAD,CAAb;AACD,OAFD;AAGD,KAND,MAMO;AACL;AACD;AACF,GAVQ,EAUN,CAACN,UAAD,EAAaP,KAAb,CAVM,CAAT;AAYA,QAAMgB,OAAO,GAAG7B,WAAW,CAAC,MAAM;AAChCe,IAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAIA,sBACE,QAAC,SAAD;AACE,IAAA,SAAS,EAAEvB,SADb;AAEE,IAAA,SAAS,EAAEE,SAFb;AAGE,IAAA,MAAM,EAAEE,MAHV;AAIE,IAAA,KAAK,EAAEE,KAJT;AAKE,IAAA,OAAO,EAAEgB;AALX;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAxDD;;GAAMzB,K;UAMYF,U;;;KANZE,K;AA0DN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport moment, { Moment } from 'moment';\nimport { useHistory } from 'react-router-dom';\n\nimport CompTimer from '../Component/timer';\n\nconst Timer: React.FC = () => {\n  const [end, setEnd] = useState<Moment | null>(null);\n  const [tmMinutes, setTmMinutes] = useState<string>('');\n  const [tmSeconds, setTmSeconds] = useState<string>('');\n  const [danger, setDanger] = useState<boolean>(false);\n  const [isEnd, setIsEnd] = useState<boolean>(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    const dtNow = moment().startOf('day');\n    // const endHour = dtNow.add(18, 'hours');\n    // const endTime = endHour.add(6, 'minutes');\n    const endTime = moment().add(30, 'seconds');\n    setEnd(endTime);\n  }, [setEnd]);\n\n  const updateTime = useCallback(async () => {\n    const dtNow = moment();\n    if (end) {\n      const timerDiff = end.diff(dtNow, 'second');\n      setTmMinutes(String(Math.floor(timerDiff / 60)));\n      setTmSeconds(String(timerDiff % 60));\n      if (timerDiff === 0) {\n        setIsEnd(true);\n      }\n      if (Math.floor(timerDiff / 60) < 1) {\n        setDanger(true);\n      }\n    }\n  }, [end]);\n\n  useEffect(() => {\n    if (!isEnd) {\n      const updateTimeId = setInterval(updateTime, 500);\n      updateTime();\n      return () => {\n        clearInterval(updateTimeId);\n      };\n    } else {\n      return;\n    }\n  }, [updateTime, isEnd]);\n\n  const clickOK = useCallback(() => {\n    history.push('/');\n  }, []);\n\n  return (\n    <CompTimer\n      tmMinutes={tmMinutes}\n      tmSeconds={tmSeconds}\n      danger={danger}\n      isEnd={isEnd}\n      clickOK={clickOK}\n    />\n  );\n};\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}