{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/Home/Component/Btn/entryBtn.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InfDialog from '../../../Utils/Container/Dialog/infDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(() => createStyles({\n  button: {\n    width: '70%',\n    height: '75%'\n  }\n}));\n\nconst EntryBtn = props => {\n  _s();\n\n  const {\n    infOpen = false,\n    setInfOpen = () => undefined,\n    entryClick = () => undefined,\n    isMax = false,\n    disabled = true\n  } = props;\n  const styles = useStyle();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [disabled ? null : /*#__PURE__*/_jsxDEV(Button, {\n      className: styles.button,\n      onClick: entryClick,\n      variant: \"outlined\",\n      color: \"primary\",\n      disabled: isMax,\n      children: 'エントリー'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), infOpen ? /*#__PURE__*/_jsxDEV(InfDialog, {\n      infOpen: infOpen,\n      title: '上限人数に達しました',\n      msg: '次回の開催までお待ちください',\n      clickOK: () => setInfOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(EntryBtn, \"gatymuhct+H6FkYI4kUzc3y9am4=\", false, function () {\n  return [useStyle];\n});\n\n_c = EntryBtn;\nexport default EntryBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryBtn\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Home/Component/Btn/entryBtn.tsx"],"names":["React","makeStyles","createStyles","Button","InfDialog","useStyle","button","width","height","EntryBtn","props","infOpen","setInfOpen","undefined","entryClick","isMax","disabled","styles"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,0BAAzC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,SAAP,MAAsB,2CAAtB;;;AAEA,MAAMC,QAAQ,GAAGJ,UAAU,CAAC,MAC1BC,YAAY,CAAC;AACXI,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,MAAM,EAAE;AAFF;AADG,CAAD,CADa,CAA3B;;AAiBA,MAAMC,QAAiC,GAAIC,KAAD,IAA0B;AAAA;;AAClE,QAAM;AACJC,IAAAA,OAAO,GAAG,KADN;AAEJC,IAAAA,UAAU,GAAG,MAAMC,SAFf;AAGJC,IAAAA,UAAU,GAAG,MAAMD,SAHf;AAIJE,IAAAA,KAAK,GAAG,KAJJ;AAKJC,IAAAA,QAAQ,GAAG;AALP,MAMFN,KANJ;AAOA,QAAMO,MAAM,GAAGZ,QAAQ,EAAvB;AAEA,sBACE;AAAA,eACGW,QAAQ,GAAG,IAAH,gBACP,QAAC,MAAD;AACE,MAAA,SAAS,EAAEC,MAAM,CAACX,MADpB;AAEE,MAAA,OAAO,EAAEQ,UAFX;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,QAAQ,EAAEC,KALZ;AAAA,gBAOG;AAPH;AAAA;AAAA;AAAA;AAAA,YAFJ,EAYGJ,OAAO,gBACN,QAAC,SAAD;AACE,MAAA,OAAO,EAAEA,OADX;AAEE,MAAA,KAAK,EAAE,YAFT;AAGE,MAAA,GAAG,EAAE,gBAHP;AAIE,MAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,KAAD;AAJ3B;AAAA;AAAA;AAAA;AAAA,YADM,GAOJ,IAnBN;AAAA,kBADF;AAuBD,CAjCD;;GAAMH,Q;UAQWJ,Q;;;KARXI,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport InfDialog from '../../../Utils/Container/Dialog/infDialog';\n\nconst useStyle = makeStyles(() =>\n  createStyles({\n    button: {\n      width: '70%',\n      height: '75%'\n    }\n  })\n);\n\ntype EntryBtnProps = {\n  infOpen: boolean;\n  setInfOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  entryClick: () => void;\n  isMax: boolean;\n  disabled: boolean;\n};\n\nconst EntryBtn: React.FC<EntryBtnProps> = (props: EntryBtnProps) => {\n  const {\n    infOpen = false,\n    setInfOpen = () => undefined,\n    entryClick = () => undefined,\n    isMax = false,\n    disabled = true\n  } = props;\n  const styles = useStyle();\n\n  return (\n    <>\n      {disabled ? null : (\n        <Button\n          className={styles.button}\n          onClick={entryClick}\n          variant='outlined'\n          color='primary'\n          disabled={isMax}\n        >\n          {'エントリー'}\n        </Button>\n      )}\n      {infOpen ? (\n        <InfDialog\n          infOpen={infOpen}\n          title={'上限人数に達しました'}\n          msg={'次回の開催までお待ちください'}\n          clickOK={() => setInfOpen(false)}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default EntryBtn;\n"]},"metadata":{},"sourceType":"module"}