{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/Home/Component/dispPicture.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { autoPlay } from \"react-swipeable-views-utils\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MediaQuery from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n_c = AutoPlaySwipeableViews;\nconst useStyles = makeStyles(theme => createStyles({\n  commonPC: {\n    width: 594,\n    height: 420,\n    flexGrow: 1\n  },\n  commonPhone: {\n    width: 297,\n    height: 210,\n    flexGrow: 1\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default\n  },\n  imgBoxPC: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  imgPC: {\n    maxHeight: 594,\n    display: \"block\",\n    maxWidth: 420,\n    objectFit: \"cover\"\n  },\n  imgPhone: {\n    height: 255,\n    display: \"block\",\n    maxWidth: 400,\n    overflow: \"hidden\",\n    width: \"100%\"\n  }\n}));\n\nconst DispPicture = props => {\n  _s();\n\n  const {\n    images = null,\n    activeStep = 0,\n    maxSteps = 0,\n    handleNext = () => undefined,\n    handleBack = () => undefined,\n    handleStepChange = () => undefined,\n    image = null\n  } = props;\n  const styles = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MediaQuery, {\n      query: \"(min-width:767px)\",\n      children: images && image ? /*#__PURE__*/_jsxDEV(Card, {\n        className: styles.commonPC,\n        children: [image.iconUrl ? /*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: image.iconUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this),\n          title: image.title,\n          subheader: image.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this),\n          title: image.title,\n          subheader: image.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(AutoPlaySwipeableViews, {\n          axis: \"x-reverse\",\n          index: activeStep,\n          onChangeIndex: handleStepChange,\n          enableMouseEvents: true,\n          children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Math.abs(activeStep - index) <= 2 ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: styles.imgPC,\n              src: image.imageUrl,\n              alt: image.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this) : null\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MobileStepper, {\n          steps: maxSteps,\n          position: \"static\",\n          variant: \"text\",\n          activeStep: activeStep,\n          nextButton: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: handleNext,\n            disabled: activeStep === maxSteps - 1,\n            children: [\"Next\", /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this),\n          backButton: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: handleBack,\n            disabled: activeStep === 0,\n            children: /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(DispPicture, \"3bjLmUB54uhXRX+frDMowQzU8P8=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = DispPicture;\nexport default DispPicture;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AutoPlaySwipeableViews\");\n$RefreshReg$(_c2, \"DispPicture\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Home/Component/dispPicture.tsx"],"names":["React","makeStyles","createStyles","MobileStepper","Button","KeyboardArrowLeft","KeyboardArrowRight","SwipeableViews","autoPlay","Card","CardHeader","Avatar","AccountCircle","MediaQuery","AutoPlaySwipeableViews","useStyles","theme","commonPC","width","height","flexGrow","commonPhone","header","display","alignItems","paddingLeft","spacing","backgroundColor","palette","background","default","imgBoxPC","imgPC","maxHeight","maxWidth","objectFit","imgPhone","overflow","DispPicture","props","images","activeStep","maxSteps","handleNext","undefined","handleBack","handleStepChange","image","styles","iconUrl","title","displayName","map","index","Math","abs","imageUrl"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { autoPlay } from \"react-swipeable-views-utils\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MediaQuery from \"react-responsive\";\n\nimport { Image } from \"../../Model/image\";\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    commonPC: {\n      width: 594,\n      height: 420,\n      flexGrow: 1,\n    },\n    commonPhone: {\n      width: 297,\n      height: 210,\n      flexGrow: 1,\n    },\n    header: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: 50,\n      paddingLeft: theme.spacing(4),\n      backgroundColor: theme.palette.background.default,\n    },\n    imgBoxPC: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    imgPC: {\n      maxHeight: 594,\n      display: \"block\",\n      maxWidth: 420,\n      objectFit: \"cover\",\n    },\n    imgPhone: {\n      height: 255,\n      display: \"block\",\n      maxWidth: 400,\n      overflow: \"hidden\",\n      width: \"100%\",\n    },\n  })\n);\n\ntype DispPictureProps = {\n  images: Image[] | null;\n  activeStep: number;\n  maxSteps: number;\n  handleNext: () => void;\n  handleBack: () => void;\n  handleStepChange: (step: number) => void;\n  image: Image | null;\n};\n\nconst DispPicture: React.FC<DispPictureProps> = (props: DispPictureProps) => {\n  const {\n    images = null,\n    activeStep = 0,\n    maxSteps = 0,\n    handleNext = () => undefined,\n    handleBack = () => undefined,\n    handleStepChange = () => undefined,\n    image = null,\n  } = props;\n  const styles = useStyles();\n\n  return (\n    <>\n      <MediaQuery query=\"(min-width:767px)\">\n        {images && image ? (\n          <Card className={styles.commonPC}>\n            {image.iconUrl ? (\n              <CardHeader\n                avatar={<Avatar src={image.iconUrl} />}\n                title={image.title}\n                subheader={image.displayName}\n              />\n            ) : (\n              <CardHeader\n                avatar={<AccountCircle />}\n                title={image.title}\n                subheader={image.displayName}\n              />\n            )}\n            <AutoPlaySwipeableViews\n              axis={\"x-reverse\"}\n              index={activeStep}\n              onChangeIndex={handleStepChange}\n              enableMouseEvents\n            >\n              {images.map((image, index) => (\n                <div key={index}>\n                  {Math.abs(activeStep - index) <= 2 ? (\n                    <img\n                      className={styles.imgPC}\n                      src={image.imageUrl}\n                      alt={image.title}\n                    />\n                  ) : null}\n                </div>\n              ))}\n            </AutoPlaySwipeableViews>\n            <MobileStepper\n              steps={maxSteps}\n              position=\"static\"\n              variant=\"text\"\n              activeStep={activeStep}\n              nextButton={\n                <Button\n                  size=\"small\"\n                  onClick={handleNext}\n                  disabled={activeStep === maxSteps - 1}\n                >\n                  Next\n                  <KeyboardArrowRight />\n                </Button>\n              }\n              backButton={\n                <Button\n                  size=\"small\"\n                  onClick={handleBack}\n                  disabled={activeStep === 0}\n                >\n                  <KeyboardArrowLeft />\n                </Button>\n              }\n            />\n          </Card>\n        ) : null}\n      </MediaQuery>\n    </>\n  );\n};\n\nexport default DispPicture;\n"]},"metadata":{},"sourceType":"module"}