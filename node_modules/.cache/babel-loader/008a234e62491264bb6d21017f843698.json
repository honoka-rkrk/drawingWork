{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rakuraku2563/Desktop/drawingWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/rakuraku2563/Desktop/drawingWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/rakuraku2563/Desktop/drawingWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import{isEmpty}from'lodash';import{sprintf}from'sprintf-js';import{blankUser}from'../Model/user';import{collectionName}from'./constants';var writeUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(db,firebaseUser,credential){var id,displayName,photoUrl,providerUid,screenName,description,query,rnd,theUser,batch,userDoc,user,diff,_user,counterDoc;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:id=firebaseUser.uid;displayName=firebaseUser.displayName;photoUrl=firebaseUser.photoURL;providerUid='';screenName='';description='';if(credential.additionalUserInfo){if(credential.additionalUserInfo.username){screenName=credential.additionalUserInfo.username;}if(credential.additionalUserInfo.profile){/* eslint-disable @typescript-eslint/no-explicit-any */providerUid=credential.additionalUserInfo.profile.id_str;description=credential.additionalUserInfo.profile.description||'';/* eslint-enable */}}if(!(!providerUid||!screenName)){_context.next=9;break;}throw new Error('Invalid credential information.');case 9:_context.next=11;return db.collection(collectionName.users).where('screenName','==',screenName).get();case 11:query=_context.sent;if(query.size){rnd=Math.floor(Math.random()*10000);screenName=\"\".concat(screenName).concat(sprintf('%04d',rnd));}theUser=null;batch=db.batch();_context.next=17;return db.collection(collectionName.users).doc(id).get();case 17:userDoc=_context.sent;if(userDoc.exists){user=userDoc.data();diff={};if(user.description!==description){diff.description=description;}if(user.displayName!==displayName){diff.displayName=displayName;}if(user.photoUrl!==photoUrl){diff.photoUrl=photoUrl;}if(!isEmpty(diff)){batch.update(userDoc.ref,_objectSpread(_objectSpread({},diff),{},{updatedAt:firebase.firestore.FieldValue.serverTimestamp()}));}theUser=_objectSpread(_objectSpread(_objectSpread({},diff),user),{},{id:userDoc.id});}else{_user=_objectSpread(_objectSpread({},blankUser),{},{providerUid:providerUid,screenName:screenName,displayName:displayName,description:description,photoUrl:photoUrl});batch.set(userDoc.ref,_objectSpread(_objectSpread({},_user),{},{createdAt:firebase.firestore.FieldValue.serverTimestamp(),updatedAt:firebase.firestore.FieldValue.serverTimestamp()}));theUser=_objectSpread(_objectSpread({},_user),{},{id:userDoc.id});counterDoc=db.collection(collectionName.docCounters).doc(collectionName.users);batch.set(counterDoc,{count:firebase.firestore.FieldValue.increment(1),updatedAt:firebase.firestore.FieldValue.serverTimestamp()},{merge:true});}_context.next=21;return batch.commit();case 21:return _context.abrupt(\"return\",theUser);case 22:case\"end\":return _context.stop();}}},_callee);}));return function writeUser(_x,_x2,_x3){return _ref.apply(this,arguments);};}();export default writeUser;","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Functions/write-user.ts"],"names":["firebase","isEmpty","sprintf","blankUser","collectionName","writeUser","db","firebaseUser","credential","id","uid","displayName","photoUrl","photoURL","providerUid","screenName","description","additionalUserInfo","username","profile","id_str","Error","collection","users","where","get","query","size","rnd","Math","floor","random","theUser","batch","doc","userDoc","exists","user","data","diff","update","ref","updatedAt","firestore","FieldValue","serverTimestamp","set","createdAt","counterDoc","docCounters","count","increment","merge","commit"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport { isEmpty } from 'lodash';\nimport { sprintf } from 'sprintf-js';\n\nimport { User, blankUser } from '../Model/user';\nimport { collectionName } from './constants';\n\nconst writeUser = async (\n  db: firebase.firestore.Firestore,\n  firebaseUser: firebase.User,\n  credential: firebase.auth.UserCredential\n) => {\n  const id = firebaseUser.uid;\n  const { displayName } = firebaseUser;\n  const photoUrl = firebaseUser.photoURL;\n  let providerUid = '';\n  let screenName = '';\n  let description = '';\n\n  if (credential.additionalUserInfo) {\n    if (credential.additionalUserInfo.username) {\n      screenName = credential.additionalUserInfo.username;\n    }\n    if (credential.additionalUserInfo.profile) {\n      /* eslint-disable @typescript-eslint/no-explicit-any */\n      providerUid = (credential.additionalUserInfo.profile as any).id_str;\n      description = (credential.additionalUserInfo.profile as any).description || '';\n      /* eslint-enable */\n    }\n  }\n\n  if (!providerUid || !screenName) {\n    throw new Error('Invalid credential information.');\n  }\n\n  // resolve screenname duplication\n  const query = await db\n    .collection(collectionName.users)\n    .where('screenName', '==', screenName)\n    .get();\n  if (query.size) {\n    const rnd = Math.floor(Math.random() * 10000);\n    screenName = `${screenName}${sprintf('%04d', rnd)}`;\n  }\n\n  let theUser: User | null = null;\n  const batch = db.batch();\n  const userDoc = await db.collection(collectionName.users).doc(id).get();\n\n  if (userDoc.exists) {\n    const user = userDoc.data() as User;\n    const diff: Partial<User> = {};\n    if (user.description !== description) {\n      diff.description = description;\n    }\n    if (user.displayName !== displayName) {\n      diff.displayName = displayName;\n    }\n    if (user.photoUrl !== photoUrl) {\n      diff.photoUrl = photoUrl;\n    }\n    if (!isEmpty(diff)) {\n      batch.update(userDoc.ref, {\n        ...diff,\n        updatedAt: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    }\n    theUser = { ...diff, ...user, id: userDoc.id };\n  } else {\n    const user: User = {\n      ...blankUser,\n      providerUid,\n      screenName,\n      displayName,\n      description,\n      photoUrl\n    };\n    batch.set(userDoc.ref, {\n      ...user,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      updatedAt: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    theUser = { ...user, id: userDoc.id };\n\n    const counterDoc = db\n      .collection(collectionName.docCounters)\n      .doc(collectionName.users);\n    batch.set(\n      counterDoc,\n      {\n        count: firebase.firestore.FieldValue.increment(1),\n        updatedAt: firebase.firestore.FieldValue.serverTimestamp()\n      },\n      { merge: true }\n    );\n  }\n  await batch.commit();\n\n  return theUser;\n};\n\nexport default writeUser;\n"]},"metadata":{},"sourceType":"module"}