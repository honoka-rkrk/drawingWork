{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rakuraku2563/Desktop/drawingWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/rakuraku2563/Desktop/drawingWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/rakuraku2563/Desktop/drawingWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{collectionName}from'./constants';var findUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(db,id){var theUser,userDoc,user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:theUser=null;_context.next=3;return db.collection(collectionName.users).doc(id).get();case 3:userDoc=_context.sent;if(userDoc.exists){user=userDoc.data();theUser=_objectSpread(_objectSpread({},user),{},{id:userDoc.id});}return _context.abrupt(\"return\",theUser);case 6:case\"end\":return _context.stop();}}},_callee);}));return function findUser(_x,_x2){return _ref.apply(this,arguments);};}();export default findUser;","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Functions/find-user.ts"],"names":["collectionName","findUser","db","id","theUser","collection","users","doc","get","userDoc","exists","user","data"],"mappings":"sdAEA,OAASA,cAAT,KAA+B,aAA/B,CAEA,GAAMC,CAAAA,QAAQ,0FAAG,iBAAOC,EAAP,CAAyCC,EAAzC,2IACXC,OADW,CACY,IADZ,uBAEOF,CAAAA,EAAE,CAACG,UAAH,CAAcL,cAAc,CAACM,KAA7B,EAAoCC,GAApC,CAAwCJ,EAAxC,EAA4CK,GAA5C,EAFP,QAETC,OAFS,eAIf,GAAIA,OAAO,CAACC,MAAZ,CAAoB,CACZC,IADY,CACLF,OAAO,CAACG,IAAR,EADK,CAElBR,OAAO,gCAAQO,IAAR,MAAcR,EAAE,CAAEM,OAAO,CAACN,EAA1B,EAAP,CACD,CAPc,gCASRC,OATQ,wDAAH,kBAARH,CAAAA,QAAQ,gDAAd,CAYA,cAAeA,CAAAA,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport { User } from '../Model/user';\nimport { collectionName } from './constants';\n\nconst findUser = async (db: firebase.firestore.Firestore, id: string) => {\n  let theUser: User | null = null;\n  const userDoc = await db.collection(collectionName.users).doc(id).get();\n\n  if (userDoc.exists) {\n    const user = userDoc.data() as User;\n    theUser = { ...user, id: userDoc.id };\n  }\n\n  return theUser;\n};\n\nexport default findUser;\n"]},"metadata":{},"sourceType":"module"}