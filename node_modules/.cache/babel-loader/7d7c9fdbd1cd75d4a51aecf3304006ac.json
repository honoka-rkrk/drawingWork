{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/Home/Component/dispPicture.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { autoPlay } from \"react-swipeable-views-utils\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MediaQuery from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n_c = AutoPlaySwipeableViews;\nconst useStyles = makeStyles(theme => createStyles({\n  commonPC: {\n    minWidth: 345\n  },\n  commonPhone: {\n    minWidth: 70\n  },\n  imgPC: {\n    height: 0,\n    paddingTop: \"100%\",\n    width: \"100%\",\n    ooverflow: \"hidden\"\n  },\n  imgPhone: {\n    height: 255,\n    display: \"block\",\n    maxWidth: 400,\n    overflow: \"hidden\",\n    width: \"100%\"\n  }\n}));\n\nconst DispPicture = props => {\n  _s();\n\n  const {\n    images = null,\n    activeStep = 0,\n    maxSteps = 0,\n    handleNext = () => undefined,\n    handleBack = () => undefined,\n    handleStepChange = () => undefined,\n    image = null\n  } = props;\n  const styles = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MediaQuery, {\n      query: \"(min-width:767px)\",\n      children: image && images ? /*#__PURE__*/_jsxDEV(Card, {\n        className: styles.commonPC,\n        children: [image.iconUrl ? /*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: image.iconUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this),\n          title: image.title,\n          subheader: image.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this),\n          title: image.title,\n          subheader: image.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(AutoPlaySwipeableViews, {\n          axis: \"x-reverse\",\n          index: activeStep,\n          onChangeIndex: handleStepChange,\n          enableMouseEvents: true,\n          children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Math.abs(activeStep - index) <= 2 ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: styles.imgPC,\n              image: image.imageUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this) : null\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(MobileStepper, {\n            steps: maxSteps,\n            position: \"static\",\n            variant: \"text\",\n            activeStep: activeStep,\n            nextButton: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              onClick: handleNext,\n              disabled: activeStep === maxSteps - 1,\n              children: [\"Next\", /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this),\n            backButton: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              onClick: handleBack,\n              disabled: activeStep === 0,\n              children: /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(DispPicture, \"3bjLmUB54uhXRX+frDMowQzU8P8=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = DispPicture;\nexport default DispPicture;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AutoPlaySwipeableViews\");\n$RefreshReg$(_c2, \"DispPicture\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Home/Component/dispPicture.tsx"],"names":["React","makeStyles","createStyles","MobileStepper","Button","KeyboardArrowLeft","KeyboardArrowRight","SwipeableViews","autoPlay","Card","CardHeader","CardActions","Avatar","AccountCircle","MediaQuery","AutoPlaySwipeableViews","useStyles","theme","commonPC","minWidth","commonPhone","imgPC","height","paddingTop","width","ooverflow","imgPhone","display","maxWidth","overflow","DispPicture","props","images","activeStep","maxSteps","handleNext","undefined","handleBack","handleStepChange","image","styles","iconUrl","title","displayName","map","index","Math","abs","imageUrl"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAgD,0BAAhD;AAEA,OAAOC,aAAP,MAA0B,iCAA1B;AAGA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AAIA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAIA,MAAMC,sBAAsB,GAAGP,QAAQ,CAACD,cAAD,CAAvC;KAAMQ,sB;AAEN,MAAMC,SAAS,GAAGf,UAAU,CAAEgB,KAAD,IAC3Bf,YAAY,CAAC;AACXgB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AADF,GADC;AAIXC,EAAAA,WAAW,EAAE;AACXD,IAAAA,QAAQ,EAAE;AADC,GAJF;AAOXE,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,CADH;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLC,IAAAA,KAAK,EAAE,MAHF;AAILC,IAAAA,SAAS,EAAE;AAJN,GAPI;AAaXC,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,MAAM,EAAE,GADA;AAERK,IAAAA,OAAO,EAAE,OAFD;AAGRC,IAAAA,QAAQ,EAAE,GAHF;AAIRC,IAAAA,QAAQ,EAAE,QAJF;AAKRL,IAAAA,KAAK,EAAE;AALC;AAbC,CAAD,CADc,CAA5B;;AAkCA,MAAMM,WAAuC,GAAIC,KAAD,IAA6B;AAAA;;AAC3E,QAAM;AACJC,IAAAA,MAAM,GAAG,IADL;AAEJC,IAAAA,UAAU,GAAG,CAFT;AAGJC,IAAAA,QAAQ,GAAG,CAHP;AAIJC,IAAAA,UAAU,GAAG,MAAMC,SAJf;AAKJC,IAAAA,UAAU,GAAG,MAAMD,SALf;AAMJE,IAAAA,gBAAgB,GAAG,MAAMF,SANrB;AAOJG,IAAAA,KAAK,GAAG;AAPJ,MAQFR,KARJ;AASA,QAAMS,MAAM,GAAGxB,SAAS,EAAxB;AAEA,sBACE;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,mBAAlB;AAAA,gBACGuB,KAAK,IAAIP,MAAT,gBACC,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEQ,MAAM,CAACtB,QAAxB;AAAA,mBACGqB,KAAK,CAACE,OAAN,gBACC,QAAC,UAAD;AACE,UAAA,MAAM,eAAE,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAEF,KAAK,CAACE;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADV;AAEE,UAAA,KAAK,EAAEF,KAAK,CAACG,KAFf;AAGE,UAAA,SAAS,EAAEH,KAAK,CAACI;AAHnB;AAAA;AAAA;AAAA;AAAA,gBADD,gBAOC,QAAC,UAAD;AACE,UAAA,MAAM,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBADV;AAEE,UAAA,KAAK,EAAEJ,KAAK,CAACG,KAFf;AAGE,UAAA,SAAS,EAAEH,KAAK,CAACI;AAHnB;AAAA;AAAA;AAAA;AAAA,gBARJ,eAcE,QAAC,sBAAD;AACE,UAAA,IAAI,EAAE,WADR;AAEE,UAAA,KAAK,EAAEV,UAFT;AAGE,UAAA,aAAa,EAAEK,gBAHjB;AAIE,UAAA,iBAAiB,MAJnB;AAAA,oBAMGN,MAAM,CAACY,GAAP,CAAW,CAACL,KAAD,EAAQM,KAAR,kBACV;AAAA,sBACGC,IAAI,CAACC,GAAL,CAASd,UAAU,GAAGY,KAAtB,KAAgC,CAAhC,gBACC;AAAK,cAAA,SAAS,EAAEL,MAAM,CAACnB,KAAvB;AAA8B,cAAA,KAAK,EAAEkB,KAAK,CAACS;AAA3C;AAAA;AAAA;AAAA;AAAA,oBADD,GAEG;AAHN,aAAUH,KAAV;AAAA;AAAA;AAAA;AAAA,kBADD;AANH;AAAA;AAAA;AAAA;AAAA,gBAdF,eA4BE,QAAC,WAAD;AAAA,iCACE,QAAC,aAAD;AACE,YAAA,KAAK,EAAEX,QADT;AAEE,YAAA,QAAQ,EAAC,QAFX;AAGE,YAAA,OAAO,EAAC,MAHV;AAIE,YAAA,UAAU,EAAED,UAJd;AAKE,YAAA,UAAU,eACR,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,OAAO,EAAEE,UAFX;AAGE,cAAA,QAAQ,EAAEF,UAAU,KAAKC,QAAQ,GAAG,CAHtC;AAAA,8CAME,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAeE,YAAA,UAAU,eACR,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,OAAO,EAAEG,UAFX;AAGE,cAAA,QAAQ,EAAEJ,UAAU,KAAK,CAH3B;AAAA,qCAKE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAyDG;AA1DN;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgED,CA5ED;;GAAMH,W;UAUWd,S;;;MAVXc,W;AA8EN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { autoPlay } from \"react-swipeable-views-utils\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MediaQuery from \"react-responsive\";\n\nimport { Image } from \"../../Model/image\";\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    commonPC: {\n      minWidth: 345,\n    },\n    commonPhone: {\n      minWidth: 70,\n    },\n    imgPC: {\n      height: 0,\n      paddingTop: \"100%\",\n      width: \"100%\",\n      ooverflow: \"hidden\",\n    },\n    imgPhone: {\n      height: 255,\n      display: \"block\",\n      maxWidth: 400,\n      overflow: \"hidden\",\n      width: \"100%\",\n    },\n  })\n);\n\ntype DispPictureProps = {\n  images: Image[] | null;\n  activeStep: number;\n  maxSteps: number;\n  handleNext: () => void;\n  handleBack: () => void;\n  handleStepChange: (step: number) => void;\n  image: Image | null;\n};\n\nconst DispPicture: React.FC<DispPictureProps> = (props: DispPictureProps) => {\n  const {\n    images = null,\n    activeStep = 0,\n    maxSteps = 0,\n    handleNext = () => undefined,\n    handleBack = () => undefined,\n    handleStepChange = () => undefined,\n    image = null,\n  } = props;\n  const styles = useStyles();\n\n  return (\n    <>\n      <MediaQuery query=\"(min-width:767px)\">\n        {image && images ? (\n          <Card className={styles.commonPC}>\n            {image.iconUrl ? (\n              <CardHeader\n                avatar={<Avatar src={image.iconUrl} />}\n                title={image.title}\n                subheader={image.displayName}\n              />\n            ) : (\n              <CardHeader\n                avatar={<AccountCircle />}\n                title={image.title}\n                subheader={image.displayName}\n              />\n            )}\n            <AutoPlaySwipeableViews\n              axis={\"x-reverse\"}\n              index={activeStep}\n              onChangeIndex={handleStepChange}\n              enableMouseEvents\n            >\n              {images.map((image, index) => (\n                <div key={index}>\n                  {Math.abs(activeStep - index) <= 2 ? (\n                    <img className={styles.imgPC} image={image.imageUrl} />\n                  ) : null}\n                </div>\n              ))}\n            </AutoPlaySwipeableViews>\n            <CardActions>\n              <MobileStepper\n                steps={maxSteps}\n                position=\"static\"\n                variant=\"text\"\n                activeStep={activeStep}\n                nextButton={\n                  <Button\n                    size=\"small\"\n                    onClick={handleNext}\n                    disabled={activeStep === maxSteps - 1}\n                  >\n                    Next\n                    <KeyboardArrowRight />\n                  </Button>\n                }\n                backButton={\n                  <Button\n                    size=\"small\"\n                    onClick={handleBack}\n                    disabled={activeStep === 0}\n                  >\n                    <KeyboardArrowLeft />\n                  </Button>\n                }\n              />\n            </CardActions>\n          </Card>\n        ) : null}\n      </MediaQuery>\n    </>\n  );\n};\n\nexport default DispPicture;\n"]},"metadata":{},"sourceType":"module"}