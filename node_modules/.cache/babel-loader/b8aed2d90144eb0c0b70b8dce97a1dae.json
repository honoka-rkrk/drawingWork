{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/Upload/Container/upload.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport CompUpload from '../Component/upload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = () => {\n  _s();\n\n  const [timerEnd, setTimerEnd] = useState(false);\n  const [isUpd, setIsUpd] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    if (timerEnd && isUpd) {\n      history.push('dispPicture');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(CompUpload, {\n    setTimerEnd: setTimerEnd,\n    setIsUpd: setIsUpd\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Upload, \"cVH7ypbAzmRNKQwo+INeHVV2Ngk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Upload/Container/upload.tsx"],"names":["React","useState","useEffect","useHistory","CompUpload","Upload","timerEnd","setTimerEnd","isUpd","setIsUpd","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAU,KAAV,CAAlC;AACA,QAAMS,OAAO,GAAGP,UAAU,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,QAAQ,IAAIE,KAAhB,EAAuB;AACrBE,MAAAA,OAAO,CAACC,IAAR,CAAa,aAAb;AACD;AACF,GAJQ,CAAT;AAMA,sBAAO,QAAC,UAAD;AAAY,IAAA,WAAW,EAAEJ,WAAzB;AAAsC,IAAA,QAAQ,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAZD;;GAAMJ,M;UAGYF,U;;;KAHZE,M;AAcN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\nimport CompUpload from '../Component/upload';\n\nconst Upload: React.FC = () => {\n  const [timerEnd, setTimerEnd] = useState<boolean>(false);\n  const [isUpd, setIsUpd] = useState<boolean>(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (timerEnd && isUpd) {\n      history.push('dispPicture');\n    }\n  });\n\n  return <CompUpload setTimerEnd={setTimerEnd} setIsUpd={setIsUpd} />;\n};\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}