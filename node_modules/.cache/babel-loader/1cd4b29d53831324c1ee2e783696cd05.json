{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/Chat/Container/WritingSpace/writingSpace.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport CompWritingSpace from '../../Component/WritingSpace/writingSpace';\nimport firebase, { db } from '../../../firebase';\nimport { UserContext } from '../../../Context/contexts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WritingSpace = () => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [submitError, setSubmitError] = useState(false);\n  const {\n    user\n  } = useContext(UserContext);\n\n  const handleOnSubmit = () => {\n    if (message !== '' && user) {\n      db.collection('messages').doc().set({\n        message: message,\n        displayName: user.displayName,\n        screenName: user.screenName,\n        photoUrl: user.photoUrl,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp()\n      });\n      setMessage('');\n    } else {\n      setSubmitError(true);\n    }\n  };\n\n  const handleContentChange = e => {\n    setSubmitError(false);\n    setMessage(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CompWritingSpace, {\n    handleContentChange: handleContentChange,\n    submitError: submitError,\n    message: message,\n    handleOnSubmit: handleOnSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WritingSpace, \"Bu7i7vDc6ZyYVNRAtGNtAYnw/eI=\");\n\n_c = WritingSpace;\nexport default WritingSpace;\n\nvar _c;\n\n$RefreshReg$(_c, \"WritingSpace\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Chat/Container/WritingSpace/writingSpace.tsx"],"names":["React","useState","useContext","CompWritingSpace","firebase","db","UserContext","WritingSpace","message","setMessage","submitError","setSubmitError","user","handleOnSubmit","collection","doc","set","displayName","screenName","photoUrl","createdAt","firestore","FieldValue","serverTimestamp","handleContentChange","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,gBAAP,MAA6B,2CAA7B;AACA,OAAOC,QAAP,IAAmBC,EAAnB,QAA6B,mBAA7B;AACA,SAASC,WAAT,QAA4B,2BAA5B;;;AAEA,MAAMC,YAAsB,GAAG,MAAM;AAAA;;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAU,KAAV,CAA9C;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAWV,UAAU,CAACI,WAAD,CAA3B;;AAEA,QAAMO,cAAc,GAAG,MAAM;AAC3B,QAAIL,OAAO,KAAK,EAAZ,IAAkBI,IAAtB,EAA4B;AAC1BP,MAAAA,EAAE,CAACS,UAAH,CAAc,UAAd,EAA0BC,GAA1B,GAAgCC,GAAhC,CAAoC;AAClCR,QAAAA,OAAO,EAAEA,OADyB;AAElCS,QAAAA,WAAW,EAAEL,IAAI,CAACK,WAFgB;AAGlCC,QAAAA,UAAU,EAAEN,IAAI,CAACM,UAHiB;AAIlCC,QAAAA,QAAQ,EAAEP,IAAI,CAACO,QAJmB;AAKlCC,QAAAA,SAAS,EAAEhB,QAAQ,CAACiB,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AALuB,OAApC;AAOAd,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KATD,MASO;AACLE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAbD;;AAeA,QAAMa,mBAAmB,GACvBC,CAD0B,IAEvB;AACHd,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAF,IAAAA,UAAU,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GALD;;AAOA,sBACE,QAAC,gBAAD;AACE,IAAA,mBAAmB,EAAEH,mBADvB;AAEE,IAAA,WAAW,EAAEd,WAFf;AAGE,IAAA,OAAO,EAAEF,OAHX;AAIE,IAAA,cAAc,EAAEK;AAJlB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnCD;;GAAMN,Y;;KAAAA,Y;AAqCN,eAAeA,YAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport CompWritingSpace from '../../Component/WritingSpace/writingSpace';\nimport firebase, { db } from '../../../firebase';\nimport { UserContext } from '../../../Context/contexts';\n\nconst WritingSpace: React.FC = () => {\n  const [message, setMessage] = useState<string>('');\n  const [submitError, setSubmitError] = useState<boolean>(false);\n  const { user } = useContext(UserContext);\n\n  const handleOnSubmit = () => {\n    if (message !== '' && user) {\n      db.collection('messages').doc().set({\n        message: message,\n        displayName: user.displayName,\n        screenName: user.screenName,\n        photoUrl: user.photoUrl,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp()\n      });\n      setMessage('');\n    } else {\n      setSubmitError(true);\n    }\n  };\n\n  const handleContentChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setSubmitError(false);\n    setMessage(e.target.value);\n  };\n\n  return (\n    <CompWritingSpace\n      handleContentChange={handleContentChange}\n      submitError={submitError}\n      message={message}\n      handleOnSubmit={handleOnSubmit}\n    />\n  );\n};\n\nexport default WritingSpace;\n"]},"metadata":{},"sourceType":"module"}