{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/Chat/Component/WritingSpace/writingSpace.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(theme => createStyles({\n  input: {\n    gridRow: 2,\n    gridColumn: 2\n  },\n  buttonBox: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    gridRow: 2,\n    gridColumn: 3\n  },\n  button: {\n    width: '50%',\n    height: '75%',\n    display: 'block',\n    backgroundColor: `${theme.palette.primary}`\n  }\n}));\n\nconst WritingSpace = props => {\n  _s();\n\n  const styles = useStyle();\n  const {\n    handleContentChange = () => undefined,\n    submitError = false,\n    message = '',\n    handleOnSubmit = () => undefined\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [submitError ? /*#__PURE__*/_jsxDEV(TextField, {\n      className: styles.input,\n      onChange: handleContentChange,\n      margin: \"dense\",\n      id: \"message\",\n      label: \"\\u5185\\u5BB9\",\n      fullWidth: true,\n      autoFocus: true,\n      multiline: true,\n      rows: 3,\n      value: message,\n      error: true,\n      helperText: 'メッセージが入力されていません'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n      className: styles.input,\n      onChange: handleContentChange,\n      margin: \"dense\",\n      id: \"message\",\n      label: \"\\u5185\\u5BB9\",\n      fullWidth: true,\n      autoFocus: true,\n      multiline: true,\n      rows: 3,\n      value: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: styles.buttonBox,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOnSubmit,\n        className: styles.button,\n        variant: \"outlined\",\n        color: \"primary\",\n        children: '送信'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WritingSpace, \"gatymuhct+H6FkYI4kUzc3y9am4=\", false, function () {\n  return [useStyle];\n});\n\n_c = WritingSpace;\nexport default WritingSpace;\n\nvar _c;\n\n$RefreshReg$(_c, \"WritingSpace\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Chat/Component/WritingSpace/writingSpace.tsx"],"names":["React","makeStyles","createStyles","Box","TextField","Button","useStyle","theme","input","gridRow","gridColumn","buttonBox","display","justifyContent","alignItems","button","width","height","backgroundColor","palette","primary","WritingSpace","props","styles","handleContentChange","undefined","submitError","message","handleOnSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAgD,0BAAhD;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,MAAMC,QAAQ,GAAGL,UAAU,CAAEM,KAAD,IAC1BL,YAAY,CAAC;AACXM,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,CADJ;AAELC,IAAAA,UAAU,EAAE;AAFP,GADI;AAKXC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITL,IAAAA,OAAO,EAAE,CAJA;AAKTC,IAAAA,UAAU,EAAE;AALH,GALA;AAYXK,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,MAAM,EAAE,KAFF;AAGNL,IAAAA,OAAO,EAAE,OAHH;AAINM,IAAAA,eAAe,EAAG,GAAEX,KAAK,CAACY,OAAN,CAAcC,OAAQ;AAJpC;AAZG,CAAD,CADa,CAA3B;;AA+BA,MAAMC,YAAyC,GAAIC,KAAD,IAA8B;AAAA;;AAC9E,QAAMC,MAAM,GAAGjB,QAAQ,EAAvB;AACA,QAAM;AACJkB,IAAAA,mBAAmB,GAAG,MAAMC,SADxB;AAEJC,IAAAA,WAAW,GAAG,KAFV;AAGJC,IAAAA,OAAO,GAAG,EAHN;AAIJC,IAAAA,cAAc,GAAG,MAAMH;AAJnB,MAKFH,KALJ;AAMA,sBACE;AAAA,eACGI,WAAW,gBACV,QAAC,SAAD;AACE,MAAA,SAAS,EAAEH,MAAM,CAACf,KADpB;AAEE,MAAA,QAAQ,EAAEgB,mBAFZ;AAGE,MAAA,MAAM,EAAC,OAHT;AAIE,MAAA,EAAE,EAAC,SAJL;AAKE,MAAA,KAAK,EAAC,cALR;AAME,MAAA,SAAS,MANX;AAOE,MAAA,SAAS,MAPX;AAQE,MAAA,SAAS,MARX;AASE,MAAA,IAAI,EAAE,CATR;AAUE,MAAA,KAAK,EAAEG,OAVT;AAWE,MAAA,KAAK,MAXP;AAYE,MAAA,UAAU,EAAE;AAZd;AAAA;AAAA;AAAA;AAAA,YADU,gBAgBV,QAAC,SAAD;AACE,MAAA,SAAS,EAAEJ,MAAM,CAACf,KADpB;AAEE,MAAA,QAAQ,EAAEgB,mBAFZ;AAGE,MAAA,MAAM,EAAC,OAHT;AAIE,MAAA,EAAE,EAAC,SAJL;AAKE,MAAA,KAAK,EAAC,cALR;AAME,MAAA,SAAS,MANX;AAOE,MAAA,SAAS,MAPX;AAQE,MAAA,SAAS,MARX;AASE,MAAA,IAAI,EAAE,CATR;AAUE,MAAA,KAAK,EAAEG;AAVT;AAAA;AAAA;AAAA;AAAA,YAjBJ,eA8BE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACZ,SAAvB;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEiB,cADX;AAEE,QAAA,SAAS,EAAEL,MAAM,CAACR,MAFpB;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAAA,kBAMG;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA,kBADF;AA2CD,CAnDD;;GAAMM,Y;UACWf,Q;;;KADXe,Y;AAqDN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyle = makeStyles((theme: Theme) =>\n  createStyles({\n    input: {\n      gridRow: 2,\n      gridColumn: 2\n    },\n    buttonBox: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      gridRow: 2,\n      gridColumn: 3\n    },\n    button: {\n      width: '50%',\n      height: '75%',\n      display: 'block',\n      backgroundColor: `${theme.palette.primary}`\n    }\n  })\n);\n\ntype WritingSpaceProps = {\n  handleContentChange: (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void;\n  submitError: boolean;\n  message: string;\n  handleOnSubmit: () => void;\n};\n\nconst WritingSpace: React.FC<WritingSpaceProps> = (props: WritingSpaceProps) => {\n  const styles = useStyle();\n  const {\n    handleContentChange = () => undefined,\n    submitError = false,\n    message = '',\n    handleOnSubmit = () => undefined\n  } = props;\n  return (\n    <>\n      {submitError ? (\n        <TextField\n          className={styles.input}\n          onChange={handleContentChange}\n          margin='dense'\n          id='message'\n          label='内容'\n          fullWidth\n          autoFocus\n          multiline\n          rows={3}\n          value={message}\n          error\n          helperText={'メッセージが入力されていません'}\n        />\n      ) : (\n        <TextField\n          className={styles.input}\n          onChange={handleContentChange}\n          margin='dense'\n          id='message'\n          label='内容'\n          fullWidth\n          autoFocus\n          multiline\n          rows={3}\n          value={message}\n        />\n      )}\n      <Box className={styles.buttonBox}>\n        <Button\n          onClick={handleOnSubmit}\n          className={styles.button}\n          variant='outlined'\n          color='primary'\n        >\n          {'送信'}\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default WritingSpace;\n"]},"metadata":{},"sourceType":"module"}