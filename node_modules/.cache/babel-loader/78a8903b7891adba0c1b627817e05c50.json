{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/Upload/Component/uploadCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Box from '@material-ui/core/Box';\nimport CardActions from '@material-ui/core/CardActions';\nimport TextField from '@material-ui/core/TextField';\nimport MediaQuery from 'react-responsive';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(() => createStyles({\n  cardCommon: {\n    height: '100%',\n    display: 'grid',\n    gridTemplateRows: '3% 10% 3% 68% 3% 10% 3%'\n  },\n  header: {\n    gridRow: 2\n  },\n  contentCommon: {\n    display: 'grid',\n    gridTemplateRows: '100%',\n    gridRow: 4\n  },\n  content: {\n    gridRow: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 'auto',\n    height: '100%'\n  },\n  media: {\n    height: 0,\n    paddingTop: '100%',\n    width: '100%',\n    objectFit: 'cover'\n  },\n  button: {\n    width: '100%',\n    height: '100%'\n  },\n  upload: {\n    gridRow: 6\n  }\n}));\n\nconst UploadCard = props => {\n  _s();\n\n  const styles = useStyle();\n  const {\n    getRootProps = () => undefined,\n    getInputProps = () => undefined,\n    myFiles = [],\n    src = '',\n    clickable = false,\n    handleUpload = () => undefined,\n    title = '無題',\n    handleTitleChange = () => undefined,\n    header = '画像をアップロードしてください',\n    subHeader = 'ファイルの種類は「Jpeg」「Jpg」「Png」にしてください。'\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MediaQuery, {\n      query: \"(min-width:767px)\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: styles.cardCommon,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          className: styles.header,\n          title: header,\n          subheader: subHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: styles.contentCommon,\n          children: /*#__PURE__*/_jsxDEV(Box, { ...getRootProps(),\n            className: styles.content,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), myFiles.length === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n              className: styles.button,\n              color: \"secondary\",\n              fullWidth: true,\n              autoFocus: true,\n              children: \"Drag&Drop your images here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              className: styles.content,\n              children: myFiles.map(file => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: src && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: src,\n                  className: styles.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 31\n                }, this)\n              }, file.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          className: styles.upload,\n          children: [myFiles.length !== 0 ? /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u30BF\\u30A4\\u30C8\\u30EB\",\n            fullWidth: true,\n            id: \"title\",\n            type: \"text\",\n            value: title,\n            onChange: handleTitleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.button,\n            disabled: !clickable,\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"secondary\",\n            fullWidth: true,\n            style: {\n              marginTop: '16px'\n            },\n            onClick: () => handleUpload(myFiles),\n            children: \"UPLOAD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MediaQuery, {\n      query: \"(max-width:767px)\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: styles.cardCommon,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          className: styles.header,\n          title: header,\n          subheader: subHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: styles.contentCommon,\n          children: /*#__PURE__*/_jsxDEV(Box, { ...getRootProps(),\n            className: styles.content,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), myFiles.length === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n              className: styles.button,\n              color: \"secondary\",\n              fullWidth: true,\n              autoFocus: true,\n              children: \"Drag&Drop your images here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(CardMedia, {\n              image: src,\n              className: styles.media\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          className: styles.upload,\n          children: [myFiles.length !== 0 ? /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u30BF\\u30A4\\u30C8\\u30EB\",\n            fullWidth: true,\n            id: \"title\",\n            type: \"text\",\n            value: title,\n            onChange: handleTitleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.button,\n            disabled: !clickable,\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"secondary\",\n            fullWidth: true,\n            style: {\n              marginTop: '5px'\n            },\n            onClick: () => handleUpload(myFiles),\n            children: \"UPLOAD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UploadCard, \"gatymuhct+H6FkYI4kUzc3y9am4=\", false, function () {\n  return [useStyle];\n});\n\n_c = UploadCard;\nexport default UploadCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadCard\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Upload/Component/uploadCard.tsx"],"names":["React","makeStyles","createStyles","Button","Card","CardContent","CardHeader","Box","CardActions","TextField","MediaQuery","CardMedia","useStyle","cardCommon","height","display","gridTemplateRows","header","gridRow","contentCommon","content","justifyContent","alignItems","width","media","paddingTop","objectFit","button","upload","UploadCard","props","styles","getRootProps","undefined","getInputProps","myFiles","src","clickable","handleUpload","title","handleTitleChange","subHeader","length","map","file","name","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Box from '@material-ui/core/Box';\nimport CardActions from '@material-ui/core/CardActions';\nimport TextField from '@material-ui/core/TextField';\nimport { DropzoneRootProps, DropzoneInputProps } from 'react-dropzone';\nimport MediaQuery from 'react-responsive';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nconst useStyle = makeStyles(() =>\n  createStyles({\n    cardCommon: {\n      height: '100%',\n      display: 'grid',\n      gridTemplateRows: '3% 10% 3% 68% 3% 10% 3%'\n    },\n    header: {\n      gridRow: 2\n    },\n    contentCommon: {\n      display: 'grid',\n      gridTemplateRows: '100%',\n      gridRow: 4\n    },\n    content: {\n      gridRow: 1,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: 'auto',\n      height: '100%'\n    },\n    media: {\n      height: 0,\n      paddingTop: '100%',\n      width: '100%',\n      objectFit: 'cover'\n    },\n    button: {\n      width: '100%',\n      height: '100%'\n    },\n    upload: {\n      gridRow: 6\n    }\n  })\n);\n\ntype UploadCardProps = {\n  getRootProps: <T extends DropzoneRootProps>(props?: T | undefined) => T;\n  getInputProps: <T extends DropzoneInputProps>(props?: T | undefined) => T;\n  myFiles: File[];\n  src: string;\n  clickable: boolean;\n  handleUpload: (accepterdImg: any) => Promise<void>;\n  title: string;\n  handleTitleChange: (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void;\n  header: string;\n  subHeader: string;\n};\n\nconst UploadCard: React.FC<UploadCardProps> = (props: UploadCardProps) => {\n  const styles = useStyle();\n  const {\n    getRootProps = () => undefined,\n    getInputProps = () => undefined,\n    myFiles = [],\n    src = '',\n    clickable = false,\n    handleUpload = () => undefined,\n    title = '無題',\n    handleTitleChange = () => undefined,\n    header = '画像をアップロードしてください',\n    subHeader = 'ファイルの種類は「Jpeg」「Jpg」「Png」にしてください。'\n  } = props;\n  return (\n    <>\n      <MediaQuery query='(min-width:767px)'>\n        <Card className={styles.cardCommon}>\n          <CardHeader\n            className={styles.header}\n            title={header}\n            subheader={subHeader}\n          />\n          <CardContent className={styles.contentCommon}>\n            <Box {...getRootProps()} className={styles.content}>\n              <input {...getInputProps()} />\n              {myFiles.length === 0 ? (\n                <Button\n                  className={styles.button}\n                  color='secondary'\n                  fullWidth\n                  autoFocus\n                >\n                  Drag&Drop your images here\n                </Button>\n              ) : (\n                <Box className={styles.content}>\n                  {myFiles.map((file: File) => (\n                    <React.Fragment key={file.name}>\n                      {src && <img src={src} className={styles.content} />}\n                    </React.Fragment>\n                  ))}\n                </Box>\n              )}\n            </Box>\n          </CardContent>\n          <CardActions className={styles.upload}>\n            {myFiles.length !== 0 ? (\n              <TextField\n                label='タイトル'\n                fullWidth\n                id='title'\n                type='text'\n                value={title}\n                onChange={handleTitleChange}\n              />\n            ) : null}\n            <Button\n              className={styles.button}\n              disabled={!clickable}\n              type='submit'\n              variant='contained'\n              color='secondary'\n              fullWidth\n              style={{ marginTop: '16px' }}\n              onClick={() => handleUpload(myFiles)}\n            >\n              UPLOAD\n            </Button>\n          </CardActions>\n        </Card>\n      </MediaQuery>\n      <MediaQuery query='(max-width:767px)'>\n        <Card className={styles.cardCommon}>\n          <CardHeader\n            className={styles.header}\n            title={header}\n            subheader={subHeader}\n          />\n          <CardContent className={styles.contentCommon}>\n            <Box {...getRootProps()} className={styles.content}>\n              <input {...getInputProps()} />\n              {myFiles.length === 0 ? (\n                <Button\n                  className={styles.button}\n                  color='secondary'\n                  fullWidth\n                  autoFocus\n                >\n                  Drag&Drop your images here\n                </Button>\n              ) : (\n                <CardMedia image={src} className={styles.media} />\n              )}\n            </Box>\n          </CardContent>\n          <CardActions className={styles.upload}>\n            {myFiles.length !== 0 ? (\n              <TextField\n                label='タイトル'\n                fullWidth\n                id='title'\n                type='text'\n                value={title}\n                onChange={handleTitleChange}\n              />\n            ) : null}\n            <Button\n              className={styles.button}\n              disabled={!clickable}\n              type='submit'\n              variant='contained'\n              color='secondary'\n              fullWidth\n              style={{ marginTop: '5px' }}\n              onClick={() => handleUpload(myFiles)}\n            >\n              UPLOAD\n            </Button>\n          </CardActions>\n        </Card>\n      </MediaQuery>\n    </>\n  );\n};\n\nexport default UploadCard;\n"]},"metadata":{},"sourceType":"module"}