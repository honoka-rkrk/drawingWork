{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/Header/Container/header.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { UserContext, FirebaseContext } from '../../Context/contexts';\nimport CompHeader from '../Component/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const {\n    auth\n  } = useContext(FirebaseContext);\n  const {\n    user\n  } = useContext(UserContext);\n  const [isLogined, setIsLogined] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const history = useHistory();\n  const menuOpen = Boolean(anchorEl);\n  const signOut = auth && user ? () => {\n    setAnchorEl(null);\n    auth.signOut();\n    history.replace('/home');\n  } : () => undefined;\n\n  const handleMenu = e => {\n    setAnchorEl(anchorEl ? null : e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const loginClick = () => {\n    setAnchorEl(null);\n    setDialogOpen(true);\n  };\n\n  useEffect(() => {\n    if (user) {\n      setIsLogined(true);\n    } else {\n      setIsLogined(false);\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(CompHeader, {\n    user: user,\n    isLogined: isLogined,\n    handleMenu: handleMenu,\n    anchorEl: anchorEl,\n    menuOpen: menuOpen,\n    handleClose: handleClose,\n    signOut: signOut,\n    dialogOpen: dialogOpen,\n    setDialogOpen: setDialogOpen,\n    loginClick: loginClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"9W0iEEw9q0Mp8IKoWODtN3Zm8Zo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Header/Container/header.tsx"],"names":["React","useContext","useState","useEffect","useHistory","UserContext","FirebaseContext","CompHeader","Header","auth","user","isLogined","setIsLogined","anchorEl","setAnchorEl","dialogOpen","setDialogOpen","history","menuOpen","Boolean","signOut","replace","undefined","handleMenu","e","currentTarget","handleClose","loginClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,wBAA7C;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAWR,UAAU,CAACK,eAAD,CAA3B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAWT,UAAU,CAACI,WAAD,CAA3B;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAqB,IAArB,CAAxC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAU,KAAV,CAA5C;AACA,QAAMe,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAMc,QAAQ,GAAGC,OAAO,CAACN,QAAD,CAAxB;AACA,QAAMO,OAAO,GACXX,IAAI,IAAIC,IAAR,GACI,MAAM;AACJI,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAL,IAAAA,IAAI,CAACW,OAAL;AACAH,IAAAA,OAAO,CAACI,OAAR,CAAgB,OAAhB;AACD,GALL,GAMI,MAAMC,SAPZ;;AASA,QAAMC,UAAU,GAAIC,CAAD,IAAsC;AACvDV,IAAAA,WAAW,CAACD,QAAQ,GAAG,IAAH,GAAUW,CAAC,CAACC,aAArB,CAAX;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMa,UAAU,GAAG,MAAM;AACvBb,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,IAAJ,EAAU;AACRE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GANQ,EAMN,CAACF,IAAD,CANM,CAAT;AAOA,sBACE,QAAC,UAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,IAAA,UAAU,EAAEY,UAHd;AAIE,IAAA,QAAQ,EAAEV,QAJZ;AAKE,IAAA,QAAQ,EAAEK,QALZ;AAME,IAAA,WAAW,EAAEQ,WANf;AAOE,IAAA,OAAO,EAAEN,OAPX;AAQE,IAAA,UAAU,EAAEL,UARd;AASE,IAAA,aAAa,EAAEC,aATjB;AAUE,IAAA,UAAU,EAAEW;AAVd;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnDD;;GAAMnB,M;UAMYJ,U;;;KANZI,M;AAqDN,eAAeA,MAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { UserContext, FirebaseContext } from '../../Context/contexts';\nimport CompHeader from '../Component/header';\n\nconst Header: React.FC = () => {\n  const { auth } = useContext(FirebaseContext);\n  const { user } = useContext(UserContext);\n  const [isLogined, setIsLogined] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n  const history = useHistory();\n  const menuOpen = Boolean(anchorEl);\n  const signOut =\n    auth && user\n      ? () => {\n          setAnchorEl(null);\n          auth.signOut();\n          history.replace('/home');\n        }\n      : () => undefined;\n\n  const handleMenu = (e: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(anchorEl ? null : e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const loginClick = () => {\n    setAnchorEl(null);\n    setDialogOpen(true);\n  };\n\n  useEffect(() => {\n    if (user) {\n      setIsLogined(true);\n    } else {\n      setIsLogined(false);\n    }\n  }, [user]);\n  return (\n    <CompHeader\n      user={user}\n      isLogined={isLogined}\n      handleMenu={handleMenu}\n      anchorEl={anchorEl}\n      menuOpen={menuOpen}\n      handleClose={handleClose}\n      signOut={signOut}\n      dialogOpen={dialogOpen}\n      setDialogOpen={setDialogOpen}\n      loginClick={loginClick}\n    />\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}