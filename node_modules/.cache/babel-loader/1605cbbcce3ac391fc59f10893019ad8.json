{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rakuraku2563/Desktop/drawingWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rakuraku2563/Desktop/drawingWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/rakuraku2563/Desktop/drawingWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{db}from'../../firebase';import CompHome from'../Component/home';import{jsx as _jsx}from\"react/jsx-runtime\";var Home=function Home(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isMax=_useState2[0],setIsMax=_useState2[1];//参加最大人数に達しているか\n//firestoreから現在参加している人数を取得する\nvar getMember=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var unmounted,entoryMembersRef;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:unmounted=false;entoryMembersRef=db.collection('entryMembers').doc('entryNumber');_context.next=4;return entoryMembersRef.get().then(function(doc){if(!unmounted){if(doc.exists){var getData=doc.data();//既に参加最大人数に達しているとき\n//既に参加最大人数に達しているとき\nif(getData.maximum){setIsMax(true);}else{setIsMax(false);}}else{//まだ一人も参加していないとき\nsetIsMax(false);}}}).catch(function(error){console.log('Error getting document',error);});case 4:return _context.abrupt(\"return\",function(){unmounted=true;});case 5:case\"end\":return _context.stop();}}},_callee);}));return function getMember(){return _ref.apply(this,arguments);};}();useEffect(function(){getMember();},[]);return/*#__PURE__*/_jsx(CompHome,{isMax:isMax,setIsMax:setIsMax});};export default Home;","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Home/Container/home.tsx"],"names":["React","useEffect","useState","db","CompHome","Home","isMax","setIsMax","getMember","unmounted","entoryMembersRef","collection","doc","get","then","exists","getData","data","maximum","catch","error","console","log"],"mappings":"udAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,EAAT,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,C,2CAEA,GAAMC,CAAAA,IAAc,CAAG,QAAjBA,CAAAA,IAAiB,EAAM,CAC3B,cAA0BH,QAAQ,CAAU,KAAV,CAAlC,wCAAOI,KAAP,eAAcC,QAAd,eAAoD;AAEpD;AACA,GAAMC,CAAAA,SAAS,0FAAG,kKACZC,SADY,CACA,KADA,CAEVC,gBAFU,CAESP,EAAE,CAACQ,UAAH,CAAc,cAAd,EAA8BC,GAA9B,CAAkC,aAAlC,CAFT,uBAGVF,CAAAA,gBAAgB,CACnBG,GADG,GAEHC,IAFG,CAEE,SAACF,GAAD,CAAS,CACb,GAAI,CAACH,SAAL,CAAgB,CACd,GAAIG,GAAG,CAACG,MAAR,CAAgB,CACd,GAAMC,CAAAA,OAAY,CAAGJ,GAAG,CAACK,IAAJ,EAArB,CACA;AAAA;AACA,GAAID,OAAO,CAACE,OAAZ,CAAqB,CACnBX,QAAQ,CAAC,IAAD,CAAR,CACD,CAFD,IAEO,CACLA,QAAQ,CAAC,KAAD,CAAR,CACD,CACF,CARD,IAQO,CACL;AACAA,QAAQ,CAAC,KAAD,CAAR,CACD,CACF,CACF,CAjBG,EAkBHY,KAlBG,CAkBG,SAACC,KAAD,CAAW,CAChBC,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAsCF,KAAtC,EACD,CApBG,CAHU,wCAwBT,UAAM,CACXX,SAAS,CAAG,IAAZ,CACD,CA1Be,wDAAH,kBAATD,CAAAA,SAAS,0CAAf,CA6BAP,SAAS,CAAC,UAAM,CACdO,SAAS,GACV,CAFQ,CAEN,EAFM,CAAT,CAIA,mBAAO,KAAC,QAAD,EAAU,KAAK,CAAEF,KAAjB,CAAwB,QAAQ,CAAEC,QAAlC,EAAP,CACD,CAtCD,CAwCA,cAAeF,CAAAA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../../firebase';\nimport CompHome from '../Component/home';\n\nconst Home: React.FC = () => {\n  const [isMax, setIsMax] = useState<boolean>(false); //参加最大人数に達しているか\n\n  //firestoreから現在参加している人数を取得する\n  const getMember = async () => {\n    let unmounted = false;\n    const entoryMembersRef = db.collection('entryMembers').doc('entryNumber');\n    await entoryMembersRef\n      .get()\n      .then((doc) => {\n        if (!unmounted) {\n          if (doc.exists) {\n            const getData: any = doc.data();\n            //既に参加最大人数に達しているとき\n            if (getData.maximum) {\n              setIsMax(true);\n            } else {\n              setIsMax(false);\n            }\n          } else {\n            //まだ一人も参加していないとき\n            setIsMax(false);\n          }\n        }\n      })\n      .catch((error) => {\n        console.log('Error getting document', error);\n      });\n    return () => {\n      unmounted = true;\n    };\n  };\n\n  useEffect(() => {\n    getMember();\n  }, []);\n\n  return <CompHome isMax={isMax} setIsMax={setIsMax} />;\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}