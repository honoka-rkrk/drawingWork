{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/Home/Container/dispPicture.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"../../firebase\";\nimport CompDispPicture from \"../../Home/Component/dispPicture\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DispPicture = () => {\n  _s();\n\n  const [images, setImages] = useState(null);\n  const [activeStep, setActiveStep] = useState(0);\n  const [maxSteps, setMaxSteps] = useState(0);\n  const [image, setImage] = useState(null); //前回の画像を取得\n\n  useEffect(() => {\n    let unmounted = false;\n\n    const getImages = async () => {\n      const imagesRef = db.collection(\"images\");\n      await imagesRef.orderBy(\"createdAt\").get().then(snapshot => {\n        const newImages = [];\n        snapshot.forEach(doc => {\n          newImages.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n\n        if (!unmounted && newImages) {\n          setImages(newImages);\n          setMaxSteps(newImages.length);\n        }\n      });\n    };\n\n    getImages();\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleStepChange = step => {\n    setActiveStep(step);\n  };\n\n  useEffect(() => {\n    setImage;\n  });\n  return /*#__PURE__*/_jsxDEV(CompDispPicture, {\n    images: images,\n    activeStep: activeStep,\n    maxSteps: maxSteps,\n    handleNext: handleNext,\n    handleBack: handleBack,\n    handleStepChange: handleStepChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DispPicture, \"A3QuprMC399+5lhijpljZdYe9eI=\");\n\n_c = DispPicture;\nexport default DispPicture;\n\nvar _c;\n\n$RefreshReg$(_c, \"DispPicture\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Home/Container/dispPicture.tsx"],"names":["React","useState","useEffect","db","CompDispPicture","DispPicture","images","setImages","activeStep","setActiveStep","maxSteps","setMaxSteps","image","setImage","unmounted","getImages","imagesRef","collection","orderBy","get","then","snapshot","newImages","forEach","doc","push","id","data","length","handleNext","prevActiveStep","handleBack","handleStepChange","step"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAAmD,OAAnD;AACA,SAAmBC,EAAnB,QAA6B,gBAA7B;AAGA,OAAOC,eAAP,MAA4B,kCAA5B;;;AAEA,MAAMC,WAAqB,GAAG,MAAM;AAAA;;AAClC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAsB,IAAtB,CAApC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAS,CAAT,CAA5C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAS,CAAT,CAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAe,IAAf,CAAlC,CAJkC,CAMlC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,SAAS,GAAG,KAAhB;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,SAAS,GAAGb,EAAE,CAACc,UAAH,CAAc,QAAd,CAAlB;AACA,YAAMD,SAAS,CACZE,OADG,CACK,WADL,EAEHC,GAFG,GAGHC,IAHG,CAGGC,QAAD,IAAgD;AACpD,cAAMC,SAAgB,GAAG,EAAzB;AACAD,QAAAA,QAAQ,CAACE,OAAT,CAAkBC,GAAD,IAAS;AACxBF,UAAAA,SAAS,CAACG,IAAV,CAAe;AACbC,YAAAA,EAAE,EAAEF,GAAG,CAACE,EADK;AAEb,eAAGF,GAAG,CAACG,IAAJ;AAFU,WAAf;AAID,SALD;;AAMA,YAAI,CAACb,SAAD,IAAcQ,SAAlB,EAA6B;AAC3Bf,UAAAA,SAAS,CAACe,SAAD,CAAT;AACAX,UAAAA,WAAW,CAACW,SAAS,CAACM,MAAX,CAAX;AACD;AACF,OAfG,CAAN;AAgBD,KAlBD;;AAmBAb,IAAAA,SAAS;AACT,WAAO,MAAM;AACXD,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFD;AAGD,GAzBQ,EAyBN,EAzBM,CAAT;;AA2BA,QAAMe,UAAU,GAAG,MAAM;AACvBpB,IAAAA,aAAa,CAAEqB,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBtB,IAAAA,aAAa,CAAEqB,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD,GAFD;;AAIA,QAAME,gBAAgB,GAAIC,IAAD,IAAkB;AACzCxB,IAAAA,aAAa,CAACwB,IAAD,CAAb;AACD,GAFD;;AAIA/B,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ;AACT,GAFQ,CAAT;AAIA,sBACE,QAAC,eAAD;AACE,IAAA,MAAM,EAAEP,MADV;AAEE,IAAA,UAAU,EAAEE,UAFd;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,UAAU,EAAEmB,UAJd;AAKE,IAAA,UAAU,EAAEE,UALd;AAME,IAAA,gBAAgB,EAAEC;AANpB;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA5DD;;GAAM3B,W;;KAAAA,W;AA8DN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport firebase, { db } from \"../../firebase\";\nimport { Image } from \"../../Model/image\";\n\nimport CompDispPicture from \"../../Home/Component/dispPicture\";\n\nconst DispPicture: React.FC = () => {\n  const [images, setImages] = useState<Array<Image> | null>(null);\n  const [activeStep, setActiveStep] = useState<number>(0);\n  const [maxSteps, setMaxSteps] = useState<number>(0);\n  const [image, setImage] = useState<Image | null>(null);\n\n  //前回の画像を取得\n  useEffect(() => {\n    let unmounted = false;\n    const getImages = async () => {\n      const imagesRef = db.collection(\"images\");\n      await imagesRef\n        .orderBy(\"createdAt\")\n        .get()\n        .then((snapshot: firebase.firestore.QuerySnapshot) => {\n          const newImages: any[] = [];\n          snapshot.forEach((doc) => {\n            newImages.push({\n              id: doc.id,\n              ...doc.data(),\n            });\n          });\n          if (!unmounted && newImages) {\n            setImages(newImages);\n            setMaxSteps(newImages.length);\n          }\n        });\n    };\n    getImages();\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStepChange = (step: number) => {\n    setActiveStep(step);\n  };\n\n  useEffect(() => {\n    setImage\n  })\n\n  return (\n    <CompDispPicture\n      images={images}\n      activeStep={activeStep}\n      maxSteps={maxSteps}\n      handleNext={handleNext}\n      handleBack={handleBack}\n      handleStepChange={handleStepChange}\n    />\n  );\n};\n\nexport default DispPicture;\n"]},"metadata":{},"sourceType":"module"}