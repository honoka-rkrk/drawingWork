{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/FirebaseApp.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { FirebaseContext, UserContext } from './Context/contexts';\nimport findUser from './Functions/find-user';\nimport writeUser from './Functions/write-user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FirebaseApp = ({\n  children\n}) => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [credential, setCredential] = useState(null);\n  const counterRef = useRef(0);\n  const auth = firebase.auth();\n  const db = firebase.firestore(); //認証状態が変更されたときに引数として渡されたトリガー関数が実行されるオブザーバー\n\n  const unsubscribe = auth.onAuthStateChanged(async firebaseUser => {\n    if (firebaseUser) {\n      if (counterRef.current === 1 && credential) {\n        const theUser = await writeUser(db, firebaseUser, credential);\n        setUser(theUser);\n      } else if (!user) {\n        const theUser = await findUser(db, firebaseUser.uid);\n        setUser(theUser);\n      }\n    } else {\n      setUser(null);\n    }\n  });\n  useEffect(() => {\n    if (credential) counterRef.current += 1;\n    return unsubscribe;\n  });\n  return /*#__PURE__*/_jsxDEV(FirebaseContext.Provider, {\n    value: {\n      auth,\n      db\n    },\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        user,\n        credential,\n        setCredential\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FirebaseApp, \"o9EO3vfUWMO+Z7zY6pJaXCZOYnM=\");\n\n_c = FirebaseApp;\nexport default FirebaseApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseApp\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/FirebaseApp.tsx"],"names":["React","useEffect","useRef","useState","firebase","FirebaseContext","UserContext","findUser","writeUser","FirebaseApp","children","user","setUser","credential","setCredential","counterRef","auth","db","firestore","unsubscribe","onAuthStateChanged","firebaseUser","current","theUser","uid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAGA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,oBAA7C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,MAAMC,WAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAc,IAAd,CAAhC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAC1C,IAD0C,CAA5C;AAGA,QAAMY,UAAU,GAAGb,MAAM,CAAS,CAAT,CAAzB;AACA,QAAMc,IAAI,GAAGZ,QAAQ,CAACY,IAAT,EAAb;AACA,QAAMC,EAAE,GAAGb,QAAQ,CAACc,SAAT,EAAX,CAPwC,CASxC;;AACA,QAAMC,WAAW,GAAGH,IAAI,CAACI,kBAAL,CAAwB,MAAOC,YAAP,IAAwB;AAClE,QAAIA,YAAJ,EAAkB;AAChB,UAAIN,UAAU,CAACO,OAAX,KAAuB,CAAvB,IAA4BT,UAAhC,EAA4C;AAC1C,cAAMU,OAAO,GAAG,MAAMf,SAAS,CAACS,EAAD,EAAKI,YAAL,EAAmBR,UAAnB,CAA/B;AACAD,QAAAA,OAAO,CAACW,OAAD,CAAP;AACD,OAHD,MAGO,IAAI,CAACZ,IAAL,EAAW;AAChB,cAAMY,OAAO,GAAG,MAAMhB,QAAQ,CAACU,EAAD,EAAKI,YAAY,CAACG,GAAlB,CAA9B;AACAZ,QAAAA,OAAO,CAACW,OAAD,CAAP;AACD;AACF,KARD,MAQO;AACLX,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GAZmB,CAApB;AAcAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,UAAJ,EAAgBE,UAAU,CAACO,OAAX,IAAsB,CAAtB;AAEhB,WAAOH,WAAP;AACD,GAJQ,CAAT;AAMA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEH,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAjC;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEN,QAAAA,IAAF;AAAQE,QAAAA,UAAR;AAAoBC,QAAAA;AAApB,OAA7B;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArCD;;GAAMD,W;;KAAAA,W;AAuCN,eAAeA,WAAf","sourcesContent":["import React, { FC, useEffect, useRef, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport { User } from './Model/user';\nimport { FirebaseContext, UserContext } from './Context/contexts';\nimport findUser from './Functions/find-user';\nimport writeUser from './Functions/write-user';\n\nconst FirebaseApp: FC = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [credential, setCredential] = useState<firebase.auth.UserCredential | null>(\n    null\n  );\n  const counterRef = useRef<number>(0);\n  const auth = firebase.auth();\n  const db = firebase.firestore();\n\n  //認証状態が変更されたときに引数として渡されたトリガー関数が実行されるオブザーバー\n  const unsubscribe = auth.onAuthStateChanged(async (firebaseUser) => {\n    if (firebaseUser) {\n      if (counterRef.current === 1 && credential) {\n        const theUser = await writeUser(db, firebaseUser, credential);\n        setUser(theUser);\n      } else if (!user) {\n        const theUser = await findUser(db, firebaseUser.uid);\n        setUser(theUser);\n      }\n    } else {\n      setUser(null);\n    }\n  });\n\n  useEffect(() => {\n    if (credential) counterRef.current += 1;\n\n    return unsubscribe;\n  });\n\n  return (\n    <FirebaseContext.Provider value={{ auth, db }}>\n      <UserContext.Provider value={{ user, credential, setCredential }}>\n        {children}\n      </UserContext.Provider>\n    </FirebaseContext.Provider>\n  );\n};\n\nexport default FirebaseApp;\n"]},"metadata":{},"sourceType":"module"}