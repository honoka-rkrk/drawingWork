{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/DispPicture/Container/detailPicture.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport firebase, { db } from '../../firebase';\nimport { collectionName } from '../../Functions/constants';\nimport CompDetailPicture from '../Component/detailPicture';\nimport { UserContext } from '../../Context/contexts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailPicture = props => {\n  _s();\n\n  const {\n    image,\n    favNum,\n    setFavNum\n  } = props;\n  const [isFav, setIsFav] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [favCount, setFavCount] = useState(0);\n  const {\n    user\n  } = useContext(UserContext); //ボタンの状態変化\n\n  const handleFavClick = () => {\n    if (isFav) {\n      setFavNum(prev => prev + 1);\n      deleteFavorite();\n    } else {\n      setFavNum(prev => prev - 1);\n      postFavorite();\n    }\n\n    setIsFav(prev => !prev);\n  }; //いいねを追加。カウントも１追加\n\n\n  const postFavorite = async () => {\n    const batch = db.batch(); //ユーザーのスクリーン名とディスプレイネームを追加\n\n    if (image.id && user) {\n      const favoriteUsersDoc = db.collection('images').doc(image.id).collection(collectionName.favoriteUsers).doc(user.screenName);\n      batch.set(favoriteUsersDoc, {\n        user: user.displayName\n      }); //全てのいいねの数をカウント\n\n      const favoriteNumDoc = db.collection('images').doc(image.id).collection(collectionName.favoriteNum).doc(collectionName.favCounters);\n      batch.set(favoriteNumDoc, {\n        count: firebase.firestore.FieldValue.increment(1)\n      }, {\n        merge: true\n      });\n      await batch.commit();\n    }\n  }; //いいねの消去、カウントも１減算\n\n\n  const deleteFavorite = async () => {\n    const batch = db.batch();\n\n    if (image.id && user) {\n      //ユーザーのスクリーン名とディスプレイネームを消去\n      const favoriteUsersDoc = db.collection('images').doc(image.id).collection(collectionName.favoriteUsers).doc(user.screenName);\n      batch.delete(favoriteUsersDoc);\n      const favoriteNumDoc = db.collection('images').doc(image.id).collection(collectionName.favoriteNum).doc(collectionName.favCounters);\n      batch.set(favoriteNumDoc, {\n        count: firebase.firestore.FieldValue.increment(-1)\n      }, {\n        merge: true\n      });\n      await batch.commit();\n    }\n  };\n\n  useEffect(() => {\n    let id;\n    let unmounted = false;\n\n    const getFavCounts = async () => {\n      const favCountsRef = db.collection('images').doc(image.id).collection(collectionName.favoriteNum).doc('favCounters');\n      await favCountsRef.get().then(doc => {\n        const getData = doc.data();\n\n        if (!unmounted) {\n          if (getData) {\n            setFavCount(getData.count);\n          } else {\n            setFavCount(0);\n          }\n        }\n      }).catch(error => {\n        console.log('Error getting document', error);\n      });\n    };\n\n    const timer = () => {\n      getFavCounts();\n      return window.setTimeout(() => {\n        id = timer();\n      }, 5000);\n    };\n\n    id = timer();\n    return () => {\n      unmounted = true;\n      clearTimeout(id);\n    };\n  }, [setFavCount]); //いいねできる数の制限がきたら他のボタンを押せなくする\n\n  useEffect(() => {\n    if (favNum <= 0 && !isFav) {\n      setIsDisabled(true);\n    } else {\n      setIsDisabled(false);\n    }\n  }, [isFav, favNum]);\n  return /*#__PURE__*/_jsxDEV(CompDetailPicture, {\n    image: image,\n    handleFavClick: handleFavClick,\n    isFav: isFav,\n    isDisabled: isDisabled,\n    favCount: favCount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DetailPicture, \"+51Et6Ngh8cbpyaKiuTj5+4CRas=\");\n\n_c = DetailPicture;\nexport default DetailPicture;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPicture\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/DispPicture/Container/detailPicture.tsx"],"names":["React","useState","useEffect","useContext","firebase","db","collectionName","CompDetailPicture","UserContext","DetailPicture","props","image","favNum","setFavNum","isFav","setIsFav","isDisabled","setIsDisabled","favCount","setFavCount","user","handleFavClick","prev","deleteFavorite","postFavorite","batch","id","favoriteUsersDoc","collection","doc","favoriteUsers","screenName","set","displayName","favoriteNumDoc","favoriteNum","favCounters","count","firestore","FieldValue","increment","merge","commit","delete","unmounted","getFavCounts","favCountsRef","get","then","getData","data","catch","error","console","log","timer","window","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport firebase, { db } from '../../firebase';\n\nimport { collectionName } from '../../Functions/constants';\nimport { Image } from '../../Model/image';\nimport CompDetailPicture from '../Component/detailPicture';\nimport { UserContext } from '../../Context/contexts';\n\ntype DetailPictureProps = {\n  image: Image;\n  favNum: number;\n  setFavNum: React.Dispatch<React.SetStateAction<number>>;\n};\nconst DetailPicture: React.FC<DetailPictureProps> = (props: DetailPictureProps) => {\n  const { image, favNum, setFavNum } = props;\n  const [isFav, setIsFav] = useState<boolean>(false);\n  const [isDisabled, setIsDisabled] = useState<boolean>(false);\n  const [favCount, setFavCount] = useState<number>(0);\n  const { user } = useContext(UserContext);\n\n  //ボタンの状態変化\n  const handleFavClick = () => {\n    if (isFav) {\n      setFavNum((prev) => prev + 1);\n      deleteFavorite();\n    } else {\n      setFavNum((prev) => prev - 1);\n      postFavorite();\n    }\n    setIsFav((prev) => !prev);\n  };\n\n  //いいねを追加。カウントも１追加\n  const postFavorite = async () => {\n    const batch = db.batch();\n    //ユーザーのスクリーン名とディスプレイネームを追加\n    if (image.id && user) {\n      const favoriteUsersDoc = db\n        .collection('images')\n        .doc(image.id)\n        .collection(collectionName.favoriteUsers)\n        .doc(user.screenName);\n\n      batch.set(favoriteUsersDoc, {\n        user: user.displayName\n      });\n\n      //全てのいいねの数をカウント\n      const favoriteNumDoc = db\n        .collection('images')\n        .doc(image.id)\n        .collection(collectionName.favoriteNum)\n        .doc(collectionName.favCounters);\n\n      batch.set(\n        favoriteNumDoc,\n        {\n          count: firebase.firestore.FieldValue.increment(1)\n        },\n        {\n          merge: true\n        }\n      );\n      await batch.commit();\n    }\n  };\n\n  //いいねの消去、カウントも１減算\n  const deleteFavorite = async () => {\n    const batch = db.batch();\n    if (image.id && user) {\n      //ユーザーのスクリーン名とディスプレイネームを消去\n      const favoriteUsersDoc = db\n        .collection('images')\n        .doc(image.id)\n        .collection(collectionName.favoriteUsers)\n        .doc(user.screenName);\n      batch.delete(favoriteUsersDoc);\n\n      const favoriteNumDoc = db\n        .collection('images')\n        .doc(image.id)\n        .collection(collectionName.favoriteNum)\n        .doc(collectionName.favCounters);\n\n      batch.set(\n        favoriteNumDoc,\n        {\n          count: firebase.firestore.FieldValue.increment(-1)\n        },\n        {\n          merge: true\n        }\n      );\n      await batch.commit();\n    }\n  };\n\n  useEffect(() => {\n    let id: number;\n    let unmounted = false;\n    const getFavCounts = async () => {\n      const favCountsRef = db\n        .collection('images')\n        .doc(image.id)\n        .collection(collectionName.favoriteNum)\n        .doc('favCounters');\n      await favCountsRef\n        .get()\n        .then((doc) => {\n          const getData: any = doc.data();\n          if (!unmounted) {\n            if (getData) {\n              setFavCount(getData.count);\n            } else {\n              setFavCount(0);\n            }\n          }\n        })\n        .catch((error) => {\n          console.log('Error getting document', error);\n        });\n    };\n    const timer = () => {\n      getFavCounts();\n      return window.setTimeout(() => {\n        id = timer();\n      }, 5000);\n    };\n    id = timer();\n    return () => {\n      unmounted = true;\n      clearTimeout(id);\n    };\n  }, [setFavCount]);\n\n  //いいねできる数の制限がきたら他のボタンを押せなくする\n  useEffect(() => {\n    if (favNum <= 0 && !isFav) {\n      setIsDisabled(true);\n    } else {\n      setIsDisabled(false);\n    }\n  }, [isFav, favNum]);\n\n  return (\n    <CompDetailPicture\n      image={image}\n      handleFavClick={handleFavClick}\n      isFav={isFav}\n      isDisabled={isDisabled}\n      favCount={favCount}\n    />\n  );\n};\n\nexport default DetailPicture;\n"]},"metadata":{},"sourceType":"module"}