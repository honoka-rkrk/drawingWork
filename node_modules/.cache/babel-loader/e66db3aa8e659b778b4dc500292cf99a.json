{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/Home/Component/dispPicture.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { autoPlay } from \"react-swipeable-views-utils\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MediaQuery from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n_c = AutoPlaySwipeableViews;\nconst useStyles = makeStyles(theme => createStyles({\n  commonPC: {\n    width: 400,\n    height: \"100%\"\n  },\n  commonPhone: {\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\"\n  },\n  imgBoxPC: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  imgPC: {\n    maxHeight: 400,\n    display: \"block\",\n    width: \"100%\",\n    objectFit: \"cover\"\n  },\n  imgPhone: {\n    maxHeight: 300,\n    display: \"block\",\n    width: \"100%\",\n    objectFit: \"cover\"\n  },\n  button: {\n    width: \"100%\"\n  }\n}));\n\nconst DispPicture = props => {\n  _s();\n\n  const {\n    images = null,\n    activeStep = 0,\n    maxSteps = 0,\n    handleNext = () => undefined,\n    handleBack = () => undefined,\n    handleStepChange = () => undefined,\n    image = null\n  } = props;\n  const styles = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MediaQuery, {\n      query: \"(min-width:767px)\",\n      children: images && image ? /*#__PURE__*/_jsxDEV(Card, {\n        className: styles.commonPC,\n        children: [image.iconUrl ? /*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: image.iconUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this),\n          title: image.title,\n          subheader: image.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this),\n          title: image.title,\n          subheader: image.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(AutoPlaySwipeableViews, {\n            axis: \"x-reverse\",\n            index: activeStep,\n            onChangeIndex: handleStepChange,\n            enableMouseEvents: true,\n            children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: Math.abs(activeStep - index) <= 2 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                className: styles.imgPC,\n                src: image.imageUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this) : null\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MobileStepper, {\n          steps: maxSteps,\n          position: \"static\",\n          variant: \"text\",\n          activeStep: activeStep,\n          nextButton: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: handleNext,\n            disabled: activeStep === maxSteps - 1,\n            children: [\"Next\", /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this),\n          backButton: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: handleBack,\n            disabled: activeStep === 0,\n            children: [/*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), \"Back\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MediaQuery, {\n      query: \"(max-width:767px)\",\n      children: images && image ? /*#__PURE__*/_jsxDEV(Card, {\n        className: styles.commonPhone,\n        children: [image.iconUrl ? /*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: image.iconUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this),\n          title: image.title,\n          subheader: image.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this),\n          title: image.title,\n          subheader: image.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(AutoPlaySwipeableViews, {\n            axis: \"x-reverse\",\n            index: activeStep,\n            onChangeIndex: handleStepChange,\n            enableMouseEvents: true,\n            children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: Math.abs(activeStep - index) <= 2 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                className: styles.imgPhone,\n                src: image.imageUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 23\n              }, this) : null\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(MobileStepper, {\n            className: styles.button,\n            steps: maxSteps,\n            position: \"static\",\n            variant: \"text\",\n            activeStep: activeStep,\n            nextButton: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              onClick: handleNext,\n              disabled: activeStep === maxSteps - 1,\n              children: [\"Next\", /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this),\n            backButton: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              onClick: handleBack,\n              disabled: activeStep === 0,\n              children: [/*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this), \"Back\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DispPicture, \"3bjLmUB54uhXRX+frDMowQzU8P8=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = DispPicture;\nexport default DispPicture;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AutoPlaySwipeableViews\");\n$RefreshReg$(_c2, \"DispPicture\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Home/Component/dispPicture.tsx"],"names":["React","makeStyles","createStyles","MobileStepper","Button","KeyboardArrowLeft","KeyboardArrowRight","SwipeableViews","autoPlay","Card","CardHeader","CardContent","CardActions","Avatar","AccountCircle","MediaQuery","AutoPlaySwipeableViews","useStyles","theme","commonPC","width","height","commonPhone","alignItems","imgBoxPC","display","imgPC","maxHeight","objectFit","imgPhone","button","DispPicture","props","images","activeStep","maxSteps","handleNext","undefined","handleBack","handleStepChange","image","styles","iconUrl","title","displayName","map","index","Math","abs","imageUrl"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { autoPlay } from \"react-swipeable-views-utils\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MediaQuery from \"react-responsive\";\n\nimport { Image } from \"../../Model/image\";\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    commonPC: {\n      width: 400,\n      height: \"100%\",\n    },\n    commonPhone: {\n      width: \"100%\",\n      height: \"100%\",\n      alignItems: \"center\",\n    },\n    imgBoxPC: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    imgPC: {\n      maxHeight: 400,\n      display: \"block\",\n      width: \"100%\",\n      objectFit: \"cover\",\n    },\n    imgPhone: {\n      maxHeight: 300,\n      display: \"block\",\n      width: \"100%\",\n      objectFit: \"cover\",\n    },\n    button: {\n      width: \"100%\",\n    },\n  })\n);\n\ntype DispPictureProps = {\n  images: Image[] | null;\n  activeStep: number;\n  maxSteps: number;\n  handleNext: () => void;\n  handleBack: () => void;\n  handleStepChange: (step: number) => void;\n  image: Image | null;\n};\n\nconst DispPicture: React.FC<DispPictureProps> = (props: DispPictureProps) => {\n  const {\n    images = null,\n    activeStep = 0,\n    maxSteps = 0,\n    handleNext = () => undefined,\n    handleBack = () => undefined,\n    handleStepChange = () => undefined,\n    image = null,\n  } = props;\n  const styles = useStyles();\n\n  return (\n    <>\n      <MediaQuery query=\"(min-width:767px)\">\n        {images && image ? (\n          <Card className={styles.commonPC}>\n            {image.iconUrl ? (\n              <CardHeader\n                avatar={<Avatar src={image.iconUrl} />}\n                title={image.title}\n                subheader={image.displayName}\n              />\n            ) : (\n              <CardHeader\n                avatar={<AccountCircle />}\n                title={image.title}\n                subheader={image.displayName}\n              />\n            )}\n            <CardContent>\n              <AutoPlaySwipeableViews\n                axis={\"x-reverse\"}\n                index={activeStep}\n                onChangeIndex={handleStepChange}\n                enableMouseEvents\n              >\n                {images.map((image, index) => (\n                  <div key={index}>\n                    {Math.abs(activeStep - index) <= 2 ? (\n                      <img className={styles.imgPC} src={image.imageUrl} />\n                    ) : null}\n                  </div>\n                ))}\n              </AutoPlaySwipeableViews>\n            </CardContent>\n            <MobileStepper\n              steps={maxSteps}\n              position=\"static\"\n              variant=\"text\"\n              activeStep={activeStep}\n              nextButton={\n                <Button\n                  size=\"small\"\n                  onClick={handleNext}\n                  disabled={activeStep === maxSteps - 1}\n                >\n                  Next\n                  <KeyboardArrowRight />\n                </Button>\n              }\n              backButton={\n                <Button\n                  size=\"small\"\n                  onClick={handleBack}\n                  disabled={activeStep === 0}\n                >\n                  <KeyboardArrowLeft />\n                  Back\n                </Button>\n              }\n            />\n          </Card>\n        ) : null}\n      </MediaQuery>\n      <MediaQuery query=\"(max-width:767px)\">\n        {images && image ? (\n          <Card className={styles.commonPhone}>\n            {image.iconUrl ? (\n              <CardHeader\n                avatar={<Avatar src={image.iconUrl} />}\n                title={image.title}\n                subheader={image.displayName}\n              />\n            ) : (\n              <CardHeader\n                avatar={<AccountCircle />}\n                title={image.title}\n                subheader={image.displayName}\n              />\n            )}\n            <CardContent>\n              <AutoPlaySwipeableViews\n                axis={\"x-reverse\"}\n                index={activeStep}\n                onChangeIndex={handleStepChange}\n                enableMouseEvents\n              >\n                {images.map((image, index) => (\n                  <div key={index}>\n                    {Math.abs(activeStep - index) <= 2 ? (\n                      <img className={styles.imgPhone} src={image.imageUrl} />\n                    ) : null}\n                  </div>\n                ))}\n              </AutoPlaySwipeableViews>\n            </CardContent>\n            <CardActions>\n              <MobileStepper\n                className={styles.button}\n                steps={maxSteps}\n                position=\"static\"\n                variant=\"text\"\n                activeStep={activeStep}\n                nextButton={\n                  <Button\n                    size=\"small\"\n                    onClick={handleNext}\n                    disabled={activeStep === maxSteps - 1}\n                  >\n                    Next\n                    <KeyboardArrowRight />\n                  </Button>\n                }\n                backButton={\n                  <Button\n                    size=\"small\"\n                    onClick={handleBack}\n                    disabled={activeStep === 0}\n                  >\n                    <KeyboardArrowLeft />\n                    Back\n                  </Button>\n                }\n              />\n            </CardActions>\n          </Card>\n        ) : null}\n      </MediaQuery>\n    </>\n  );\n};\n\nexport default DispPicture;\n"]},"metadata":{},"sourceType":"module"}