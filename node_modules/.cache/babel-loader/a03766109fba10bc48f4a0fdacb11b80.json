{"ast":null,"code":"var _jsxFileName = \"/Users/rakuraku2563/Desktop/drawingWork/src/Home/Component/dispPicture.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n_c = AutoPlaySwipeableViews;\nconst useStyles = makeStyles(theme => createStyles({\n  commonPC: {\n    width: 594,\n    height: 420,\n    flexGrow: 1\n  },\n  commonPhone: {\n    width: 297,\n    height: 210,\n    flexGrow: 1\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default\n  },\n  imgBoxPC: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  imgPC: {\n    maxHeight: 594,\n    display: 'block',\n    maxWidth: 420,\n    objectFit: 'cover'\n  },\n  imgPhone: {\n    height: 255,\n    display: 'block',\n    maxWidth: 400,\n    overflow: 'hidden',\n    width: '100%'\n  }\n}));\n\nconst DispPicture = props => {\n  _s();\n\n  const {\n    images = null,\n    activeStep = 0,\n    maxSteps = 0,\n    handleNext = () => undefined,\n    handleBack = () => undefined,\n    handleStepChange = () => undefined\n  } = props;\n  const styles = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: images ? /*#__PURE__*/_jsxDEV(Box, {\n      className: styles.commonPC,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        square: true,\n        elevation: 0,\n        className: styles.header,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: images[activeStep].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AutoPlaySwipeableViews, {\n        axis: 'x-reverse',\n        index: activeStep,\n        onChangeIndex: handleStepChange,\n        enableMouseEvents: true,\n        children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: Math.abs(activeStep - index) <= 2 ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.imgPC,\n            src: image.imageUrl,\n            alt: image.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this) : null\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MobileStepper, {\n        steps: maxSteps,\n        position: \"static\",\n        variant: \"text\",\n        activeStep: activeStep,\n        nextButton: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: handleNext,\n          disabled: activeStep === maxSteps - 1,\n          children: [\"Next\", /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this),\n        backButton: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: handleBack,\n          disabled: activeStep === 0,\n          children: /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(DispPicture, \"3bjLmUB54uhXRX+frDMowQzU8P8=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = DispPicture;\nexport default DispPicture;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AutoPlaySwipeableViews\");\n$RefreshReg$(_c2, \"DispPicture\");","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Home/Component/dispPicture.tsx"],"names":["React","makeStyles","createStyles","Box","MobileStepper","Paper","Typography","Button","KeyboardArrowLeft","KeyboardArrowRight","SwipeableViews","autoPlay","AutoPlaySwipeableViews","useStyles","theme","commonPC","width","height","flexGrow","commonPhone","header","display","alignItems","paddingLeft","spacing","backgroundColor","palette","background","default","imgBoxPC","imgPC","maxHeight","maxWidth","objectFit","imgPhone","overflow","DispPicture","props","images","activeStep","maxSteps","handleNext","undefined","handleBack","handleStepChange","styles","title","map","image","index","Math","abs","imageUrl"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MediaQuery from \"react-responsive\";\n\nimport { Image } from '../../Model/image';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    commonPC: {\n      width: 594,\n      height: 420,\n      flexGrow: 1\n    },\n    commonPhone: {\n      width: 297,\n      height: 210,\n      flexGrow: 1\n    },\n    header: {\n      display: 'flex',\n      alignItems: 'center',\n      height: 50,\n      paddingLeft: theme.spacing(4),\n      backgroundColor: theme.palette.background.default\n    },\n    imgBoxPC: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    imgPC: {\n      maxHeight: 594,\n      display: 'block',\n      maxWidth: 420,\n      objectFit: 'cover'\n    },\n    imgPhone: {\n      height: 255,\n      display: 'block',\n      maxWidth: 400,\n      overflow: 'hidden',\n      width: '100%'\n    }\n  })\n);\n\ntype DispPictureProps = {\n  images: Image[] | null;\n  activeStep: number;\n  maxSteps: number;\n  handleNext: () => void;\n  handleBack: () => void;\n  handleStepChange: (step: number) => void;\n};\n\nconst DispPicture: React.FC<DispPictureProps> = (props: DispPictureProps) => {\n  const {\n    images = null,\n    activeStep = 0,\n    maxSteps = 0,\n    handleNext = () => undefined,\n    handleBack = () => undefined,\n    handleStepChange = () => undefined\n  } = props;\n  const styles = useStyles();\n\n  return (\n    <>\n      {images ? (\n        <Box className={styles.commonPC}>\n          <Paper square elevation={0} className={styles.header}>\n            <Typography>{images[activeStep].title}</Typography>\n          </Paper>\n          <AutoPlaySwipeableViews\n            axis={'x-reverse'}\n            index={activeStep}\n            onChangeIndex={handleStepChange}\n            enableMouseEvents\n          >\n            {images.map((image, index) => (\n              <div key={index}>\n                {Math.abs(activeStep - index) <= 2 ? (\n                  <img\n                    className={styles.imgPC}\n                    src={image.imageUrl}\n                    alt={image.title}\n                  />\n                ) : null}\n              </div>\n            ))}\n          </AutoPlaySwipeableViews>\n          <MobileStepper\n            steps={maxSteps}\n            position='static'\n            variant='text'\n            activeStep={activeStep}\n            nextButton={\n              <Button\n                size='small'\n                onClick={handleNext}\n                disabled={activeStep === maxSteps - 1}\n              >\n                Next\n                <KeyboardArrowRight />\n              </Button>\n            }\n            backButton={\n              <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\n                <KeyboardArrowLeft />\n              </Button>\n            }\n          />\n        </Box>\n      ) : null}\n    </>\n  );\n};\n\nexport default DispPicture;\n"]},"metadata":{},"sourceType":"module"}