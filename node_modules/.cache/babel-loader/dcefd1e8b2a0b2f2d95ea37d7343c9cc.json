{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rakuraku2563/Desktop/drawingWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/rakuraku2563/Desktop/drawingWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/rakuraku2563/Desktop/drawingWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/rakuraku2563/Desktop/drawingWork/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback,useContext}from'react';import{useDropzone}from'react-dropzone';import firebase,{storage,db}from'../../firebase';import CompUploadCard from'../Component/uploadCard';import{UserContext}from'../../Context/contexts';import{jsx as _jsx}from\"react/jsx-runtime\";var UploadCard=function UploadCard(props){var setIsUpd=props.setIsUpd;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),myFiles=_useState2[0],setMyFiles=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),clickable=_useState4[0],setClickable=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),src=_useState6[0],setSrc=_useState6[1];var _useState7=useState('無題'),_useState8=_slicedToArray(_useState7,2),title=_useState8[0],setTitle=_useState8[1];var _useContext=useContext(UserContext),user=_useContext.user;var _useState9=useState('画像をアップロードしてください'),_useState10=_slicedToArray(_useState9,2),header=_useState10[0],setHeader=_useState10[1];var _useState11=useState('ファイルの種類は「Jpeg」「Jpg」「Png」にしてください。'),_useState12=_slicedToArray(_useState11,2),subHeader=_useState12[0],setSubHeader=_useState12[1];//タイトルが変更されたとき\nvar handleTitleChange=function handleTitleChange(e){setTitle(e.target.value);};var onDrop=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(acceptedFiles){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(acceptedFiles[0]){_context.next=2;break;}return _context.abrupt(\"return\");case 2:try{setMyFiles(_toConsumableArray(acceptedFiles));setClickable(true);handlePreview(acceptedFiles);}catch(error){alert(error);}case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}(),[]);var onDropRejected=function onDropRejected(){alert('画像のみ受け付けることができます。');};var _useDropzone=useDropzone({onDrop:onDrop,onDropRejected:onDropRejected}),getRootProps=_useDropzone.getRootProps,getInputProps=_useDropzone.getInputProps;var handleUpload=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(accepterdImg){var storageRef,uploadTask;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{//アップロード処理\nstorageRef=storage.ref(\"/images/\".concat(myFiles[0].name));uploadTask=storageRef.put(myFiles[0]);uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,next,error);}catch(error){console.log('エラーキャッチ',error);}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function handleUpload(_x2){return _ref2.apply(this,arguments);};}();var postUrl=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var url;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return storage.ref(\"/images/\".concat(myFiles[0].name)).getDownloadURL();case 2:url=_context3.sent;if(url!==''&&user){db.collection('images').doc().set({title:title,imageUrl:url,screenName:user.screenName,displayName:user.displayName,iconUrl:user.photoUrl,createdAt:firebase.firestore.FieldValue.serverTimestamp()});}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function postUrl(){return _ref3.apply(this,arguments);};}();var next=function next(snapshot){//進行中のsnapshotを得る\n//アップロードの進行度を表示\nvar percent=snapshot.bytesTransferred/snapshot.totalBytes*100;console.log(percent+'% done');console.log(snapshot);if(percent===100){postUrl();setClickable(false);setIsUpd(true);setHeader('画像がアップロードできました！');setSubHeader('制限時間が終わると自動的に閲覧画面に移動します。制限時間が終わるまで今しばらくお待ちください。');}};var error=function error(_error){alert(_error);};var handlePreview=function handlePreview(files){if(files===null){return;}var file=files[0];if(file===null){return;}var reader=new FileReader();reader.readAsDataURL(file);reader.onload=function(){setSrc(reader.result);};};return/*#__PURE__*/_jsx(CompUploadCard,{getRootProps:getRootProps,getInputProps:getInputProps,myFiles:myFiles,src:src,clickable:clickable,handleUpload:handleUpload,title:title,handleTitleChange:handleTitleChange,header:header,subHeader:subHeader});};export default UploadCard;","map":{"version":3,"sources":["/Users/rakuraku2563/Desktop/drawingWork/src/Upload/Container/uploadCard.tsx"],"names":["React","useState","useCallback","useContext","useDropzone","firebase","storage","db","CompUploadCard","UserContext","UploadCard","props","setIsUpd","myFiles","setMyFiles","clickable","setClickable","src","setSrc","title","setTitle","user","header","setHeader","subHeader","setSubHeader","handleTitleChange","e","target","value","onDrop","acceptedFiles","handlePreview","error","alert","onDropRejected","getRootProps","getInputProps","handleUpload","accepterdImg","storageRef","ref","name","uploadTask","put","on","TaskEvent","STATE_CHANGED","next","console","log","postUrl","getDownloadURL","url","collection","doc","set","imageUrl","screenName","displayName","iconUrl","photoUrl","createdAt","firestore","FieldValue","serverTimestamp","snapshot","percent","bytesTransferred","totalBytes","files","file","reader","FileReader","readAsDataURL","onload","result"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useContext } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport firebase, { storage, db } from '../../firebase';\nimport CompUploadCard from '../Component/uploadCard';\nimport { UserContext } from '../../Context/contexts';\n\ntype UploadCardProps = {\n  setIsUpd: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst UploadCard: React.FC<UploadCardProps> = (props: UploadCardProps) => {\n  const { setIsUpd } = props;\n  const [myFiles, setMyFiles] = useState<File[]>([]);\n  const [clickable, setClickable] = useState(false);\n  const [src, setSrc] = useState('');\n  const [title, setTitle] = useState<string>('無題');\n  const { user } = useContext(UserContext);\n  const [header, setHeader] = useState<string>('画像をアップロードしてください');\n  const [subHeader, setSubHeader] = useState<string>(\n    'ファイルの種類は「Jpeg」「Jpg」「Png」にしてください。'\n  );\n  //タイトルが変更されたとき\n  const handleTitleChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setTitle(e.target.value);\n  };\n\n  const onDrop = useCallback(async (acceptedFiles: File[]) => {\n    if (!acceptedFiles[0]) return;\n\n    try {\n      setMyFiles([...acceptedFiles]);\n      setClickable(true);\n      handlePreview(acceptedFiles);\n    } catch (error) {\n      alert(error);\n    }\n  }, []);\n\n  const onDropRejected = () => {\n    alert('画像のみ受け付けることができます。');\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    onDropRejected\n  });\n\n  const handleUpload = async (accepterdImg: any) => {\n    try {\n      //アップロード処理\n      const storageRef = storage.ref(`/images/${myFiles[0].name}`);\n      const uploadTask: any = storageRef.put(myFiles[0]);\n\n      uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, next, error);\n    } catch (error) {\n      console.log('エラーキャッチ', error);\n    }\n  };\n\n  const postUrl = async () => {\n    const url = await storage.ref(`/images/${myFiles[0].name}`).getDownloadURL();\n    if (url !== '' && user) {\n      db.collection('images').doc().set({\n        title: title,\n        imageUrl: url,\n        screenName: user.screenName,\n        displayName: user.displayName,\n        iconUrl: user.photoUrl,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    }\n  };\n\n  const next = (snapshot: { bytesTransferred: number; totalBytes: number }) => {\n    //進行中のsnapshotを得る\n    //アップロードの進行度を表示\n    const percent = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    console.log(percent + '% done');\n    console.log(snapshot);\n    if (percent === 100) {\n      postUrl();\n      setClickable(false);\n      setIsUpd(true);\n      setHeader('画像がアップロードできました！');\n      setSubHeader(\n        '制限時間が終わると自動的に閲覧画面に移動します。制限時間が終わるまで今しばらくお待ちください。'\n      );\n    }\n  };\n\n  const error = (error: any) => {\n    alert(error);\n  };\n\n  const handlePreview = (files: any) => {\n    if (files === null) {\n      return;\n    }\n    const file = files[0];\n    if (file === null) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      setSrc(reader.result as string);\n    };\n  };\n\n  return (\n    <CompUploadCard\n      getRootProps={getRootProps}\n      getInputProps={getInputProps}\n      myFiles={myFiles}\n      src={src}\n      clickable={clickable}\n      handleUpload={handleUpload}\n      title={title}\n      handleTitleChange={handleTitleChange}\n      header={header}\n      subHeader={subHeader}\n    />\n  );\n};\n\nexport default UploadCard;\n"]},"metadata":{},"sourceType":"module"}